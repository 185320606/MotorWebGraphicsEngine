/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./when-4ca4e419","./Check-430b3551","./defineProperties-163ddb68","./Cartesian3-32451e63","./Ellipsoid-d2aa3b12","./Transforms-7b04d7e0","./Matrix4-33464f2b","./RuntimeError-443472b0","./Cartesian2-f49a1383","./FeatureDetection-0d4fee13","./WebGLConstants-2ddfa2f9","./ComponentDatatype-329b9462","./AttributeCompression-7809eba4","./IntersectionTests-15d018f5","./Plane-84b14a0a","./WebMercatorProjection-72bc39e7","./createTaskProcessorWorker","./EllipsoidTangentPlane-3967708f","./OrientedBoundingBox-51e874ad","./EllipsoidalOccluder-bf5748df","./TerrainEncoding-5ed40ec6"],(function(e,t,i,a,r,n,o,u,s,d,h,c,l,g,m,p,v,E,C,f,I){"use strict";var M=Uint16Array.BYTES_PER_ELEMENT,T=Int32Array.BYTES_PER_ELEMENT,b=Uint32Array.BYTES_PER_ELEMENT,x=Float32Array.BYTES_PER_ELEMENT,N=Float64Array.BYTES_PER_ELEMENT;function P(t,a,r){r=e.defaultValue(r,i.CesiumMath);for(var n=t.length,o=0;o<n;++o)if(r.equalsEpsilon(t[o],a,i.CesiumMath.EPSILON12))return o;return-1}var B=new r.Cartographic,w=new a.Cartesian3,R=new a.Cartesian3,S=new a.Cartesian3,A=new o.Matrix4;function y(t,n,u,d,h,c,l,g,m,p){for(var v=l.length,E=0;E<v;++E){var C=l[E],f=C.cartographic,I=C.index,M=t.length,T=f.longitude,b=f.latitude;b=i.CesiumMath.clamp(b,-i.CesiumMath.PI_OVER_TWO,i.CesiumMath.PI_OVER_TWO);var x=f.height-c.skirtHeight;c.hMin=Math.min(c.hMin,x),r.Cartographic.fromRadians(T,b,x,B),m&&(B.longitude+=g),m?E===v-1?B.latitude+=p:0===E&&(B.latitude-=p):B.latitude+=g;var N=c.ellipsoid.cartographicToCartesian(B);t.push(N),n.push(x),u.push(s.Cartesian2.clone(u[I])),d.length>0&&d.push(d[I]),o.Matrix4.multiplyByPoint(c.toENU,N,w);var P=c.minimum,R=c.maximum;a.Cartesian3.minimumByComponent(w,P,P),a.Cartesian3.maximumByComponent(w,R,R);var S=c.lastBorderPoint;if(e.defined(S)){var A=S.index;h.push(A,M-1,M,M,I,A)}c.lastBorderPoint=C}}return v((function(t,d){t.ellipsoid=r.Ellipsoid.clone(t.ellipsoid),t.rectangle=s.Rectangle.clone(t.rectangle);var h=function(t,d,h,c,l,g,m,v,_,F){var O,V,W,Y,k,L;e.defined(c)?(O=c.west,V=c.south,W=c.east,Y=c.north,k=c.width,L=c.height):(O=i.CesiumMath.toRadians(l.west),V=i.CesiumMath.toRadians(l.south),W=i.CesiumMath.toRadians(l.east),Y=i.CesiumMath.toRadians(l.north),k=i.CesiumMath.toRadians(c.width),L=i.CesiumMath.toRadians(c.height));var U,H,D=[V,Y],G=[O,W],j=n.Transforms.eastNorthUpToFixedFrame(d,h),z=o.Matrix4.inverseTransformation(j,A);v&&(U=p.WebMercatorProjection.geodeticLatitudeToMercatorAngle(V),H=1/(p.WebMercatorProjection.geodeticLatitudeToMercatorAngle(Y)-U));var q=new DataView(t),J=Number.POSITIVE_INFINITY,K=Number.NEGATIVE_INFINITY,Q=R;Q.x=Number.POSITIVE_INFINITY,Q.y=Number.POSITIVE_INFINITY,Q.z=Number.POSITIVE_INFINITY;var X=S;X.x=Number.NEGATIVE_INFINITY,X.y=Number.NEGATIVE_INFINITY,X.z=Number.NEGATIVE_INFINITY;var Z,$,ee=0,te=0,ie=0;for($=0;$<4;++$){var ae=ee;Z=q.getUint32(ae,!0),ae+=b;var re=i.CesiumMath.toRadians(180*q.getFloat64(ae,!0));ae+=N,-1===P(G,re)&&G.push(re);var ne=i.CesiumMath.toRadians(180*q.getFloat64(ae,!0));ae+=N,-1===P(D,ne)&&D.push(ne),ae+=2*N;var oe=q.getInt32(ae,!0);ae+=T,te+=oe,oe=q.getInt32(ae,!0),ie+=3*oe,ee+=Z+b}var ue=[],se=[],de=new Array(te),he=new Array(te),ce=new Array(te),le=v?new Array(te):[],ge=new Array(ie),me=[],pe=[],ve=[],Ee=[],Ce=0,fe=0;for(ee=0,$=0;$<4;++$){Z=q.getUint32(ee,!0);var Ie=ee+=b,Me=i.CesiumMath.toRadians(180*q.getFloat64(ee,!0));ee+=N;var Te=i.CesiumMath.toRadians(180*q.getFloat64(ee,!0));ee+=N;var be=i.CesiumMath.toRadians(180*q.getFloat64(ee,!0)),xe=.5*be;ee+=N;var Ne=i.CesiumMath.toRadians(180*q.getFloat64(ee,!0)),Pe=.5*Ne;ee+=N;var Be=q.getInt32(ee,!0);ee+=T;var we=q.getInt32(ee,!0);ee+=T,ee+=T;for(var Re=new Array(Be),Se=0;Se<Be;++Se){var Ae=Me+q.getUint8(ee++)*be;B.longitude=Ae;var ye=Te+q.getUint8(ee++)*Ne;B.latitude=ye;var _e=6371010*q.getFloat32(ee,!0);if(ee+=x,_e<F&&(_e*=_),_e*=g,B.height=_e,-1!==P(G,Ae)||-1!==P(D,ye)){var Fe=P(ue,B,r.Cartographic);if(-1!==Fe){Re[Se]=se[Fe];continue}ue.push(r.Cartographic.clone(B)),se.push(Ce)}Re[Se]=Ce,Math.abs(Ae-O)<xe?me.push({index:Ce,cartographic:r.Cartographic.clone(B)}):Math.abs(Ae-W)<xe?ve.push({index:Ce,cartographic:r.Cartographic.clone(B)}):Math.abs(ye-V)<Pe?pe.push({index:Ce,cartographic:r.Cartographic.clone(B)}):Math.abs(ye-Y)<Pe&&Ee.push({index:Ce,cartographic:r.Cartographic.clone(B)}),J=Math.min(_e,J),K=Math.max(_e,K),ce[Ce]=_e;var Oe=h.cartographicToCartesian(B);de[Ce]=Oe,v&&(le[Ce]=(p.WebMercatorProjection.geodeticLatitudeToMercatorAngle(ye)-U)*H),o.Matrix4.multiplyByPoint(z,Oe,w),a.Cartesian3.minimumByComponent(w,Q,Q),a.Cartesian3.maximumByComponent(w,X,X);var Ve=(Ae-O)/(W-O);Ve=i.CesiumMath.clamp(Ve,0,1);var We=(ye-V)/(Y-V);We=i.CesiumMath.clamp(We,0,1),he[Ce]=new s.Cartesian2(Ve,We),++Ce}for(var Ye=3*we,ke=0;ke<Ye;++ke,++fe)ge[fe]=Re[q.getUint16(ee,!0)],ee+=M;if(Z!==ee-Ie)throw new u.RuntimeError("Invalid terrain tile.")}de.length=Ce,he.length=Ce,ce.length=Ce,v&&(le.length=Ce);var Le=Ce,Ue=fe,He={hMin:J,lastBorderPoint:void 0,skirtHeight:m,toENU:z,ellipsoid:h,minimum:Q,maximum:X};me.sort((function(e,t){return t.cartographic.latitude-e.cartographic.latitude})),pe.sort((function(e,t){return e.cartographic.longitude-t.cartographic.longitude})),ve.sort((function(e,t){return e.cartographic.latitude-t.cartographic.latitude})),Ee.sort((function(e,t){return t.cartographic.longitude-e.cartographic.longitude}));if(y(de,ce,he,le,ge,He,me,-1e-5*k,!0,-1e-5*L),y(de,ce,he,le,ge,He,pe,-1e-5*L,!1),y(de,ce,he,le,ge,He,ve,1e-5*k,!0,1e-5*L),y(de,ce,he,le,ge,He,Ee,1e-5*L,!1),me.length>0&&Ee.length>0){var De=me[0].index,Ge=Le,je=Ee[Ee.length-1].index,ze=de.length-1;ge.push(je,ze,Ge,Ge,De,je)}te=de.length;var qe,Je=n.BoundingSphere.fromPoints(de);e.defined(c)&&c.width<i.CesiumMath.PI_OVER_TWO+i.CesiumMath.EPSILON5&&(qe=C.OrientedBoundingBox.fromRectangle(c,J,K,h));for(var Ke=new f.EllipsoidalOccluder(h).computeHorizonCullingPoint(d,de),Qe=new E.AxisAlignedBoundingBox(Q,X,d),Xe=new I.TerrainEncoding(Qe,He.hMin,K,j,!1,v),Ze=new Float32Array(te*Xe.getStride()),$e=0,et=0;et<te;++et)$e=Xe.encode(Ze,$e,de[et],he[et],ce[et],void 0,le[et]);return{vertices:Ze,indices:new Uint16Array(ge),maximumHeight:K,minimumHeight:J,encoding:Xe,boundingSphere3D:Je,orientedBoundingBox:qe,occludeePointInScaledSpace:Ke,vertexCountWithoutSkirts:Le,skirtIndex:Ue}}(t.buffer,t.relativeToCenter,t.ellipsoid,t.rectangle,t.nativeRectangle,t.exaggeration,t.skirtHeight,t.includeWebMercatorT,t.negativeAltitudeExponentBias,t.negativeElevationThreshold),c=h.vertices;d.push(c.buffer);var l=h.indices;return d.push(l.buffer),{vertices:c.buffer,indices:l.buffer,numberOfAttributes:h.encoding.getStride(),minimumHeight:h.minimumHeight,maximumHeight:h.maximumHeight,boundingSphere3D:h.boundingSphere3D,orientedBoundingBox:h.orientedBoundingBox,occludeePointInScaledSpace:h.occludeePointInScaledSpace,encoding:h.encoding,vertexCountWithoutSkirts:h.vertexCountWithoutSkirts,skirtIndex:h.skirtIndex}}))}));
