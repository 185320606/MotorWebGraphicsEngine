/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./when-4ca4e419","./Check-430b3551","./defineProperties-163ddb68","./Cartesian3-32451e63","./Ellipsoid-d2aa3b12","./Transforms-7b04d7e0","./Matrix4-33464f2b","./RuntimeError-443472b0","./Cartesian2-f49a1383","./FeatureDetection-0d4fee13","./WebGLConstants-2ddfa2f9","./ComponentDatatype-329b9462","./GeometryAttribute-b8faa946","./GeometryAttributes-614c63f8","./IndexDatatype-153fdd7f","./IntersectionTests-15d018f5","./Plane-84b14a0a","./arrayFill-11a46844","./VertexFormat-a4fe3a21","./arrayRemoveDuplicates-c3fd0b84","./EllipsoidTangentPlane-3967708f","./EllipsoidRhumbLine-c004db91","./PolygonPipeline-d25dad97","./PolylineVolumeGeometryLibrary-06ac58f3","./EllipsoidGeodesic-c57b5e5c","./PolylinePipeline-4ac94627","./CorridorGeometryLibrary-dbfd4edb"],(function(t,e,r,a,i,o,n,s,l,d,u,m,f,y,p,c,h,g,C,b,v,A,_,w,T,G,E){"use strict";var V=new a.Cartesian3,F=new a.Cartesian3,L=new a.Cartesian3,P=new a.Cartesian3,x=new a.Cartesian3,N=new a.Cartesian3,D=new a.Cartesian3,M=new a.Cartesian3;function I(t,e){for(var r=0;r<t.length;r++)t[r]=e.scaleToGeodeticSurface(t[r],t[r]);return t}function O(t,e,r,i,o,n){var s=t.normals,l=t.tangents,d=t.bitangents,u=a.Cartesian3.normalize(a.Cartesian3.cross(r,e,D),D);n.normal&&E.CorridorGeometryLibrary.addAttribute(s,e,i,o),n.tangent&&E.CorridorGeometryLibrary.addAttribute(l,u,i,o),n.bitangent&&E.CorridorGeometryLibrary.addAttribute(d,r,i,o)}function k(e,i,o){var n,s,l,d=e.positions,u=e.corners,c=e.endPositions,h=e.lefts,g=e.normals,C=new y.GeometryAttributes,b=0,v=0,A=0;for(s=0;s<d.length;s+=2)b+=l=d[s].length-3,A+=2*l,v+=d[s+1].length-3;for(b+=3,v+=3,s=0;s<u.length;s++){n=u[s];var _=u[s].leftPositions;t.defined(_)?(b+=l=_.length,A+=l):(v+=l=u[s].rightPositions.length,A+=l)}var w,T=t.defined(c);T&&(b+=w=c[0].length-3,v+=w,A+=6*(w/=3));var G,x,I,k,S,R,H=b+v,z=new Float64Array(H),U={normals:i.normal?new Float32Array(H):void 0,tangents:i.tangent?new Float32Array(H):void 0,bitangents:i.bitangent?new Float32Array(H):void 0},B=0,Y=H-1,W=V,q=F,J=w/2,j=p.IndexDatatype.createTypedArray(H/3,A),K=0;if(T){R=L,S=P;var Q=c[0];for(W=a.Cartesian3.fromArray(g,0,W),q=a.Cartesian3.fromArray(h,0,q),s=0;s<J;s++)R=a.Cartesian3.fromArray(Q,3*(J-1-s),R),S=a.Cartesian3.fromArray(Q,3*(J+s),S),E.CorridorGeometryLibrary.addAttribute(z,S,B),E.CorridorGeometryLibrary.addAttribute(z,R,void 0,Y),O(U,W,q,B,Y,i),k=(x=B/3)+1,I=(G=(Y-2)/3)-1,j[K++]=G,j[K++]=x,j[K++]=I,j[K++]=I,j[K++]=x,j[K++]=k,B+=3,Y-=3}var X,Z,$=0,tt=0,et=d[$++],rt=d[$++];for(z.set(et,B),z.set(rt,Y-rt.length+1),q=a.Cartesian3.fromArray(h,tt,q),l=rt.length-3,s=0;s<l;s+=3)X=o.geodeticSurfaceNormal(a.Cartesian3.fromArray(et,s,D),D),Z=o.geodeticSurfaceNormal(a.Cartesian3.fromArray(rt,l-s,M),M),O(U,W=a.Cartesian3.normalize(a.Cartesian3.add(X,Z,W),W),q,B,Y,i),k=(x=B/3)+1,I=(G=(Y-2)/3)-1,j[K++]=G,j[K++]=x,j[K++]=I,j[K++]=I,j[K++]=x,j[K++]=k,B+=3,Y-=3;for(X=o.geodeticSurfaceNormal(a.Cartesian3.fromArray(et,l,D),D),Z=o.geodeticSurfaceNormal(a.Cartesian3.fromArray(rt,l,M),M),W=a.Cartesian3.normalize(a.Cartesian3.add(X,Z,W),W),tt+=3,s=0;s<u.length;s++){var at,it,ot,nt=(n=u[s]).leftPositions,st=n.rightPositions,lt=N,dt=L,ut=P;if(W=a.Cartesian3.fromArray(g,tt,W),t.defined(nt)){for(O(U,W,q,void 0,Y,i),Y-=3,it=k,ot=I,at=0;at<nt.length/3;at++)lt=a.Cartesian3.fromArray(nt,3*at,lt),j[K++]=it,j[K++]=ot-at-1,j[K++]=ot-at,E.CorridorGeometryLibrary.addAttribute(z,lt,void 0,Y),dt=a.Cartesian3.fromArray(z,3*(ot-at-1),dt),ut=a.Cartesian3.fromArray(z,3*it,ut),O(U,W,q=a.Cartesian3.normalize(a.Cartesian3.subtract(dt,ut,q),q),void 0,Y,i),Y-=3;lt=a.Cartesian3.fromArray(z,3*it,lt),dt=a.Cartesian3.subtract(a.Cartesian3.fromArray(z,3*ot,dt),lt,dt),ut=a.Cartesian3.subtract(a.Cartesian3.fromArray(z,3*(ot-at),ut),lt,ut),O(U,W,q=a.Cartesian3.normalize(a.Cartesian3.add(dt,ut,q),q),B,void 0,i),B+=3}else{for(O(U,W,q,B,void 0,i),B+=3,it=I,ot=k,at=0;at<st.length/3;at++)lt=a.Cartesian3.fromArray(st,3*at,lt),j[K++]=it,j[K++]=ot+at,j[K++]=ot+at+1,E.CorridorGeometryLibrary.addAttribute(z,lt,B),dt=a.Cartesian3.fromArray(z,3*it,dt),ut=a.Cartesian3.fromArray(z,3*(ot+at),ut),O(U,W,q=a.Cartesian3.normalize(a.Cartesian3.subtract(dt,ut,q),q),B,void 0,i),B+=3;lt=a.Cartesian3.fromArray(z,3*it,lt),dt=a.Cartesian3.subtract(a.Cartesian3.fromArray(z,3*(ot+at),dt),lt,dt),ut=a.Cartesian3.subtract(a.Cartesian3.fromArray(z,3*ot,ut),lt,ut),O(U,W,q=a.Cartesian3.normalize(a.Cartesian3.negate(a.Cartesian3.add(ut,dt,q),q),q),void 0,Y,i),Y-=3}for(et=d[$++],rt=d[$++],et.splice(0,3),rt.splice(rt.length-3,3),z.set(et,B),z.set(rt,Y-rt.length+1),l=rt.length-3,tt+=3,q=a.Cartesian3.fromArray(h,tt,q),at=0;at<rt.length;at+=3)X=o.geodeticSurfaceNormal(a.Cartesian3.fromArray(et,at,D),D),Z=o.geodeticSurfaceNormal(a.Cartesian3.fromArray(rt,l-at,M),M),O(U,W=a.Cartesian3.normalize(a.Cartesian3.add(X,Z,W),W),q,B,Y,i),x=(k=B/3)-1,G=(I=(Y-2)/3)+1,j[K++]=G,j[K++]=x,j[K++]=I,j[K++]=I,j[K++]=x,j[K++]=k,B+=3,Y-=3;B-=3,Y+=3}if(O(U,W=a.Cartesian3.fromArray(g,g.length-3,W),q,B,Y,i),T){B+=3,Y-=3,R=L,S=P;var mt=c[1];for(s=0;s<J;s++)R=a.Cartesian3.fromArray(mt,3*(w-s-1),R),S=a.Cartesian3.fromArray(mt,3*s,S),E.CorridorGeometryLibrary.addAttribute(z,R,void 0,Y),E.CorridorGeometryLibrary.addAttribute(z,S,B),O(U,W,q,B,Y,i),x=(k=B/3)-1,G=(I=(Y-2)/3)+1,j[K++]=G,j[K++]=x,j[K++]=I,j[K++]=I,j[K++]=x,j[K++]=k,B+=3,Y-=3}if(C.position=new f.GeometryAttribute({componentDatatype:m.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:z}),i.st){var ft,yt,pt=new Float32Array(H/3*2),ct=0;if(T){b/=3,v/=3;var ht,gt=Math.PI/(w+1);yt=1/(b-w+1),ft=1/(v-w+1);var Ct=w/2;for(s=Ct+1;s<w+1;s++)ht=r.CesiumMath.PI_OVER_TWO+gt*s,pt[ct++]=ft*(1+Math.cos(ht)),pt[ct++]=.5*(1+Math.sin(ht));for(s=1;s<v-w+1;s++)pt[ct++]=s*ft,pt[ct++]=0;for(s=w;s>Ct;s--)ht=r.CesiumMath.PI_OVER_TWO-s*gt,pt[ct++]=1-ft*(1+Math.cos(ht)),pt[ct++]=.5*(1+Math.sin(ht));for(s=Ct;s>0;s--)ht=r.CesiumMath.PI_OVER_TWO-gt*s,pt[ct++]=1-yt*(1+Math.cos(ht)),pt[ct++]=.5*(1+Math.sin(ht));for(s=b-w;s>0;s--)pt[ct++]=s*yt,pt[ct++]=1;for(s=1;s<Ct+1;s++)ht=r.CesiumMath.PI_OVER_TWO+gt*s,pt[ct++]=yt*(1+Math.cos(ht)),pt[ct++]=.5*(1+Math.sin(ht))}else{for(yt=1/((b/=3)-1),ft=1/((v/=3)-1),s=0;s<v;s++)pt[ct++]=s*ft,pt[ct++]=0;for(s=b;s>0;s--)pt[ct++]=(s-1)*yt,pt[ct++]=1}C.st=new f.GeometryAttribute({componentDatatype:m.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:pt})}return i.normal&&(C.normal=new f.GeometryAttribute({componentDatatype:m.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:U.normals})),i.tangent&&(C.tangent=new f.GeometryAttribute({componentDatatype:m.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:U.tangents})),i.bitangent&&(C.bitangent=new f.GeometryAttribute({componentDatatype:m.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:U.bitangents})),{attributes:C,indices:j}}function S(t,e,r){r[e++]=t[0],r[e++]=t[1],r[e++]=t[2];for(var a=3;a<t.length;a+=3){var i=t[a],o=t[a+1],n=t[a+2];r[e++]=i,r[e++]=o,r[e++]=n,r[e++]=i,r[e++]=o,r[e++]=n}return r[e++]=t[0],r[e++]=t[1],r[e++]=t[2],r}function R(e,r){var i=new C.VertexFormat({position:r.position,normal:r.normal||r.bitangent||e.shadowVolume,tangent:r.tangent,bitangent:r.normal||r.bitangent,st:r.st}),o=e.ellipsoid,n=k(E.CorridorGeometryLibrary.computePositions(e),i,o),s=e.height,l=e.extrudedHeight,d=n.attributes,u=n.indices,y=d.position.values,c=y.length,h=new Float64Array(6*c),b=new Float64Array(c);b.set(y);var v,A=new Float64Array(4*c);A=S(y=_.PolygonPipeline.scaleToGeodeticHeight(y,s,o),0,A),A=S(b=_.PolygonPipeline.scaleToGeodeticHeight(b,l,o),2*c,A),h.set(y),h.set(b,c),h.set(A,2*c),d.position.values=h,d=function(t,e){if(!(e.normal||e.tangent||e.bitangent||e.st))return t;var r,i,o=t.position.values;(e.normal||e.bitangent)&&(r=t.normal.values,i=t.bitangent.values);var n,s=t.position.values.length/18,l=3*s,d=2*s,u=2*l;if(e.normal||e.bitangent||e.tangent){var m=e.normal?new Float32Array(6*l):void 0,f=e.tangent?new Float32Array(6*l):void 0,y=e.bitangent?new Float32Array(6*l):void 0,p=V,c=F,h=L,g=P,C=x,b=N,v=u;for(n=0;n<l;n+=3){var A=v+u;p=a.Cartesian3.fromArray(o,n,p),c=a.Cartesian3.fromArray(o,n+l,c),h=a.Cartesian3.fromArray(o,(n+3)%l,h),c=a.Cartesian3.subtract(c,p,c),h=a.Cartesian3.subtract(h,p,h),g=a.Cartesian3.normalize(a.Cartesian3.cross(c,h,g),g),e.normal&&(E.CorridorGeometryLibrary.addAttribute(m,g,A),E.CorridorGeometryLibrary.addAttribute(m,g,A+3),E.CorridorGeometryLibrary.addAttribute(m,g,v),E.CorridorGeometryLibrary.addAttribute(m,g,v+3)),(e.tangent||e.bitangent)&&(b=a.Cartesian3.fromArray(r,n,b),e.bitangent&&(E.CorridorGeometryLibrary.addAttribute(y,b,A),E.CorridorGeometryLibrary.addAttribute(y,b,A+3),E.CorridorGeometryLibrary.addAttribute(y,b,v),E.CorridorGeometryLibrary.addAttribute(y,b,v+3)),e.tangent&&(C=a.Cartesian3.normalize(a.Cartesian3.cross(b,g,C),C),E.CorridorGeometryLibrary.addAttribute(f,C,A),E.CorridorGeometryLibrary.addAttribute(f,C,A+3),E.CorridorGeometryLibrary.addAttribute(f,C,v),E.CorridorGeometryLibrary.addAttribute(f,C,v+3))),v+=6}if(e.normal){for(m.set(r),n=0;n<l;n+=3)m[n+l]=-r[n],m[n+l+1]=-r[n+1],m[n+l+2]=-r[n+2];t.normal.values=m}else t.normal=void 0;if(e.bitangent?(y.set(i),y.set(i,l),t.bitangent.values=y):t.bitangent=void 0,e.tangent){var _=t.tangent.values;f.set(_),f.set(_,l),t.tangent.values=f}}if(e.st){var w=t.st.values,T=new Float32Array(6*d);T.set(w),T.set(w,d);for(var G=2*d,D=0;D<2;D++){for(T[G++]=w[0],T[G++]=w[1],n=2;n<d;n+=2){var M=w[n],I=w[n+1];T[G++]=M,T[G++]=I,T[G++]=M,T[G++]=I}T[G++]=w[0],T[G++]=w[1]}t.st.values=T}return t}(d,r);var w=c/3;if(e.shadowVolume){var T=d.normal.values;c=T.length;var G=new Float32Array(6*c);for(v=0;v<c;v++)T[v]=-T[v];G.set(T,c),G=S(T,4*c,G),d.extrudeDirection=new f.GeometryAttribute({componentDatatype:m.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:G}),r.normal||(d.normal=void 0)}if(t.defined(e.offsetAttribute)){var D=new Uint8Array(6*w);if(e.offsetAttribute===f.GeometryOffsetAttribute.TOP)D=g.arrayFill(D,1,0,w),D=g.arrayFill(D,1,2*w,4*w);else{var M=e.offsetAttribute===f.GeometryOffsetAttribute.NONE?0:1;D=g.arrayFill(D,M)}d.applyOffset=new f.GeometryAttribute({componentDatatype:m.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:D})}var I=u.length,O=w+w,R=p.IndexDatatype.createTypedArray(h.length/3,2*I+3*O);R.set(u);var H,z,U,B,Y=I;for(v=0;v<I;v+=3){var W=u[v],q=u[v+1],J=u[v+2];R[Y++]=J+w,R[Y++]=q+w,R[Y++]=W+w}for(v=0;v<O;v+=2)U=(H=v+O)+1,B=(z=H+O)+1,R[Y++]=H,R[Y++]=z,R[Y++]=U,R[Y++]=U,R[Y++]=z,R[Y++]=B;return{attributes:d,indices:R}}var H=new a.Cartesian3,z=new a.Cartesian3,U=new i.Cartographic;function B(t,e,r,i,o,n){var s=a.Cartesian3.subtract(e,t,H);a.Cartesian3.normalize(s,s);var l=r.geodeticSurfaceNormal(t,z),d=a.Cartesian3.cross(s,l,H);a.Cartesian3.multiplyByScalar(d,i,d);var u=o.latitude,m=o.longitude,f=n.latitude,y=n.longitude;a.Cartesian3.add(t,d,z),r.cartesianToCartographic(z,U);var p=U.latitude,c=U.longitude;u=Math.min(u,p),m=Math.min(m,c),f=Math.max(f,p),y=Math.max(y,c),a.Cartesian3.subtract(t,d,z),r.cartesianToCartographic(z,U),p=U.latitude,c=U.longitude,u=Math.min(u,p),m=Math.min(m,c),f=Math.max(f,p),y=Math.max(y,c),o.latitude=u,o.longitude=m,n.latitude=f,n.longitude=y}var Y=new a.Cartesian3,W=new a.Cartesian3,q=new i.Cartographic,J=new i.Cartographic;function j(e,r,i,o,n){e=I(e,r);var s=b.arrayRemoveDuplicates(e,a.Cartesian3.equalsEpsilon),d=s.length;if(d<2||i<=0)return new l.Rectangle;var u,m,f=.5*i;if(q.latitude=Number.POSITIVE_INFINITY,q.longitude=Number.POSITIVE_INFINITY,J.latitude=Number.NEGATIVE_INFINITY,J.longitude=Number.NEGATIVE_INFINITY,o===w.CornerType.ROUNDED){var y=s[0];a.Cartesian3.subtract(y,s[1],Y),a.Cartesian3.normalize(Y,Y),a.Cartesian3.multiplyByScalar(Y,f,Y),a.Cartesian3.add(y,Y,W),r.cartesianToCartographic(W,U),u=U.latitude,m=U.longitude,q.latitude=Math.min(q.latitude,u),q.longitude=Math.min(q.longitude,m),J.latitude=Math.max(J.latitude,u),J.longitude=Math.max(J.longitude,m)}for(var p=0;p<d-1;++p)B(s[p],s[p+1],r,f,q,J);var c=s[d-1];a.Cartesian3.subtract(c,s[d-2],Y),a.Cartesian3.normalize(Y,Y),a.Cartesian3.multiplyByScalar(Y,f,Y),a.Cartesian3.add(c,Y,W),B(c,W,r,f,q,J),o===w.CornerType.ROUNDED&&(r.cartesianToCartographic(W,U),u=U.latitude,m=U.longitude,q.latitude=Math.min(q.latitude,u),q.longitude=Math.min(q.longitude,m),J.latitude=Math.max(J.latitude,u),J.longitude=Math.max(J.longitude,m));var h=t.defined(n)?n:new l.Rectangle;return h.north=J.latitude,h.south=q.latitude,h.east=J.longitude,h.west=q.longitude,h}function K(o){var n=(o=t.defaultValue(o,t.defaultValue.EMPTY_OBJECT)).positions,s=o.width;e.Check.defined("options.positions",n),e.Check.defined("options.width",s);var l=t.defaultValue(o.height,0),d=t.defaultValue(o.extrudedHeight,l);this._positions=n,this._ellipsoid=i.Ellipsoid.clone(t.defaultValue(o.ellipsoid,i.Ellipsoid.WGS84)),this._vertexFormat=C.VertexFormat.clone(t.defaultValue(o.vertexFormat,C.VertexFormat.DEFAULT)),this._width=s,this._height=Math.max(l,d),this._extrudedHeight=Math.min(l,d),this._cornerType=t.defaultValue(o.cornerType,w.CornerType.ROUNDED),this._granularity=t.defaultValue(o.granularity,r.CesiumMath.RADIANS_PER_DEGREE),this._shadowVolume=t.defaultValue(o.shadowVolume,!1),this._workerName="createCorridorGeometry",this._offsetAttribute=o.offsetAttribute,this._rectangle=void 0,this.packedLength=1+n.length*a.Cartesian3.packedLength+i.Ellipsoid.packedLength+C.VertexFormat.packedLength+7}K.pack=function(r,o,n){e.Check.defined("value",r),e.Check.defined("array",o),n=t.defaultValue(n,0);var s=r._positions,l=s.length;o[n++]=l;for(var d=0;d<l;++d,n+=a.Cartesian3.packedLength)a.Cartesian3.pack(s[d],o,n);return i.Ellipsoid.pack(r._ellipsoid,o,n),n+=i.Ellipsoid.packedLength,C.VertexFormat.pack(r._vertexFormat,o,n),n+=C.VertexFormat.packedLength,o[n++]=r._width,o[n++]=r._height,o[n++]=r._extrudedHeight,o[n++]=r._cornerType,o[n++]=r._granularity,o[n++]=r._shadowVolume?1:0,o[n]=t.defaultValue(r._offsetAttribute,-1),o};var Q=i.Ellipsoid.clone(i.Ellipsoid.UNIT_SPHERE),X=new C.VertexFormat,Z={positions:void 0,ellipsoid:Q,vertexFormat:X,width:void 0,height:void 0,extrudedHeight:void 0,cornerType:void 0,granularity:void 0,shadowVolume:void 0,offsetAttribute:void 0};return K.unpack=function(r,o,n){e.Check.defined("array",r),o=t.defaultValue(o,0);for(var s=r[o++],l=new Array(s),d=0;d<s;++d,o+=a.Cartesian3.packedLength)l[d]=a.Cartesian3.unpack(r,o);var u=i.Ellipsoid.unpack(r,o,Q);o+=i.Ellipsoid.packedLength;var m=C.VertexFormat.unpack(r,o,X);o+=C.VertexFormat.packedLength;var f=r[o++],y=r[o++],p=r[o++],c=r[o++],h=r[o++],g=1===r[o++],b=r[o];return t.defined(n)?(n._positions=l,n._ellipsoid=i.Ellipsoid.clone(u,n._ellipsoid),n._vertexFormat=C.VertexFormat.clone(m,n._vertexFormat),n._width=f,n._height=y,n._extrudedHeight=p,n._cornerType=c,n._granularity=h,n._shadowVolume=g,n._offsetAttribute=-1===b?void 0:b,n):(Z.positions=l,Z.width=f,Z.height=y,Z.extrudedHeight=p,Z.cornerType=c,Z.granularity=h,Z.shadowVolume=g,Z.offsetAttribute=-1===b?void 0:b,new K(Z))},K.computeRectangle=function(r,a){var o=(r=t.defaultValue(r,t.defaultValue.EMPTY_OBJECT)).positions,n=r.width;return e.Check.defined("options.positions",o),e.Check.defined("options.width",n),j(o,t.defaultValue(r.ellipsoid,i.Ellipsoid.WGS84),n,t.defaultValue(r.cornerType,w.CornerType.ROUNDED),a)},K.createGeometry=function(e){var i=e._positions,n=e._width,s=e._ellipsoid;i=I(i,s);var l=b.arrayRemoveDuplicates(i,a.Cartesian3.equalsEpsilon);if(!(l.length<2||n<=0)){var d,u=e._height,y=e._extrudedHeight,p=!r.CesiumMath.equalsEpsilon(u,y,0,r.CesiumMath.EPSILON2),c=e._vertexFormat,h={ellipsoid:s,positions:l,width:n,cornerType:e._cornerType,granularity:e._granularity,saveAttributes:!0};if(p)h.height=u,h.extrudedHeight=y,h.shadowVolume=e._shadowVolume,h.offsetAttribute=e._offsetAttribute,d=R(h,c);else if((d=k(E.CorridorGeometryLibrary.computePositions(h),c,s)).attributes.position.values=_.PolygonPipeline.scaleToGeodeticHeight(d.attributes.position.values,u,s),t.defined(e._offsetAttribute)){var C=e._offsetAttribute===f.GeometryOffsetAttribute.NONE?0:1,v=d.attributes.position.values.length,A=new Uint8Array(v/3);g.arrayFill(A,C),d.attributes.applyOffset=new f.GeometryAttribute({componentDatatype:m.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:A})}var w=d.attributes,T=o.BoundingSphere.fromVertices(w.position.values,void 0,3);return c.position||(d.attributes.position.values=void 0),new f.Geometry({attributes:w,indices:d.indices,primitiveType:f.PrimitiveType.TRIANGLES,boundingSphere:T,offsetAttribute:e._offsetAttribute})}},K.createShadowVolume=function(t,e,r){var a=t._granularity,i=t._ellipsoid,o=e(a,i),n=r(a,i);return new K({positions:t._positions,width:t._width,cornerType:t._cornerType,ellipsoid:i,granularity:a,extrudedHeight:o,height:n,vertexFormat:C.VertexFormat.POSITION_ONLY,shadowVolume:!0})},r.defineProperties(K.prototype,{rectangle:{get:function(){return t.defined(this._rectangle)||(this._rectangle=j(this._positions,this._ellipsoid,this._width,this._cornerType)),this._rectangle}},textureCoordinateRotationPoints:{get:function(){return[0,0,0,1,1,0]}}}),function(e,r){return t.defined(r)&&(e=K.unpack(e,r)),e._ellipsoid=i.Ellipsoid.clone(e._ellipsoid),K.createGeometry(e)}}));
