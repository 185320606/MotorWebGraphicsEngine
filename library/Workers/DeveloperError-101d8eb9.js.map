{"version":3,"file":"DeveloperError-101d8eb9.js","sources":["../../../../Source/Core/DeveloperError.js"],"sourcesContent":["import defined from './defined.js';\r\n\r\n    /**\r\n     * Constructs an exception object that is thrown due to a developer error, e.g., invalid argument,\r\n     * argument out of range, etc.  This exception should only be thrown during development;\r\n     * it usually indicates a bug in the calling code.  This exception should never be\r\n     * caught; instead the calling code should strive not to generate it.\r\n     * <br /><br />\r\n     * On the other hand, a {@link RuntimeError} indicates an exception that may\r\n     * be thrown at runtime, e.g., out of memory, that the calling code should be prepared\r\n     * to catch.\r\n     *\r\n     * @alias DeveloperError\r\n     * @constructor\r\n     * @extends Error\r\n     *\r\n     * @param {String} [message] The error message for this exception.\r\n     *\r\n     * @see RuntimeError\r\n     */\r\n    function DeveloperError(message) {\r\n        /**\r\n         * 'DeveloperError' indicating that this exception was thrown due to a developer error.\r\n         * @type {String}\r\n         * @readonly\r\n         */\r\n        this.name = 'DeveloperError';\r\n\r\n        /**\r\n         * The explanation for why this exception was thrown.\r\n         * @type {String}\r\n         * @readonly\r\n         */\r\n        this.message = message;\r\n\r\n        //Browsers such as IE don't have a stack property until you actually throw the error.\r\n        var stack;\r\n        try {\r\n            throw new Error();\r\n        } catch (e) {\r\n            stack = e.stack;\r\n        }\r\n\r\n        /**\r\n         * The stack trace of this exception, if available.\r\n         * @type {String}\r\n         * @readonly\r\n         */\r\n        this.stack = stack;\r\n    }\r\n\r\n    if (defined(Object.create)) {\r\n        DeveloperError.prototype = Object.create(Error.prototype);\r\n        DeveloperError.prototype.constructor = DeveloperError;\r\n    }\r\n\r\n    DeveloperError.prototype.toString = function() {\r\n        var str = this.name + ': ' + this.message;\r\n\r\n        if (defined(this.stack)) {\r\n            str += '\\n' + this.stack.toString();\r\n        }\r\n\r\n        return str;\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    DeveloperError.throwInstantiationError = function() {\r\n        throw new DeveloperError('This function defines an interface and should not be called directly.');\r\n    };\r\nexport default DeveloperError;\r\n"],"names":["DeveloperError","message","stack","this","name","Error","e","defined","Object","create","prototype","constructor","toString","str","throwInstantiationError"],"mappings":"iEAoBI,SAASA,EAAeC,GAgBpB,IAAIC,EAVJC,KAAKC,KAAO,iBAOZD,KAAKF,QAAUA,EAIf,IACI,MAAM,IAAII,MACZ,MAAOC,GACLJ,EAAQI,EAAEJ,MAQdC,KAAKD,MAAQA,EAGbK,UAAQC,OAAOC,UACfT,EAAeU,UAAYF,OAAOC,OAAOJ,MAAMK,WAC/CV,EAAeU,UAAUC,YAAcX,GAG3CA,EAAeU,UAAUE,SAAW,WAChC,IAAIC,EAAMV,KAAKC,KAAO,KAAOD,KAAKF,QAMlC,OAJIM,UAAQJ,KAAKD,SACbW,GAAO,KAAOV,KAAKD,MAAMU,YAGtBC,GAMXb,EAAec,wBAA0B,WACrC,MAAM,IAAId,EAAe"}