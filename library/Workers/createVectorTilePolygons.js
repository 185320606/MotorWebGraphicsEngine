/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./when-4ca4e419","./Check-430b3551","./defineProperties-163ddb68","./Cartesian3-32451e63","./Ellipsoid-d2aa3b12","./Transforms-7b04d7e0","./Matrix4-33464f2b","./RuntimeError-443472b0","./Cartesian2-f49a1383","./FeatureDetection-0d4fee13","./WebGLConstants-2ddfa2f9","./AttributeCompression-7809eba4","./IndexDatatype-153fdd7f","./IntersectionTests-15d018f5","./Plane-84b14a0a","./createTaskProcessorWorker","./EllipsoidTangentPlane-3967708f","./OrientedBoundingBox-51e874ad","./Color-1501ed7a"],(function(e,a,r,n,t,i,o,s,f,d,c,u,h,l,p,g,b,C,v){"use strict";var y=new n.Cartesian3,I=new t.Ellipsoid,m=new f.Rectangle,w={min:void 0,max:void 0,indexBytesPerElement:void 0};function x(e,a,r){var n=a.length,t=2+n*C.OrientedBoundingBox.packedLength+1+function(e){for(var a=e.length,r=0,n=0;n<a;++n)r+=v.Color.packedLength+3+e[n].batchIds.length;return r}(r),i=new Float64Array(t),o=0;i[o++]=e,i[o++]=n;for(var s=0;s<n;++s)C.OrientedBoundingBox.pack(a[s],i,o),o+=C.OrientedBoundingBox.packedLength;var f=r.length;i[o++]=f;for(var d=0;d<f;++d){var c=r[d];v.Color.pack(c.color,i,o),o+=v.Color.packedLength,i[o++]=c.offset,i[o++]=c.count;var u=c.batchIds,h=u.length;i[o++]=h;for(var l=0;l<h;++l)i[o++]=u[l]}return i}var A=new n.Cartesian3,E=new n.Cartesian3,N=new n.Cartesian3,T=new n.Cartesian3,k=new n.Cartesian3,B=new t.Cartographic,L=new f.Rectangle;return g((function(a,i){var o;!function(e){var a=new Float64Array(e),r=0;w.indexBytesPerElement=a[r++],w.min=a[r++],w.max=a[r++],n.Cartesian3.unpack(a,r,y),r+=n.Cartesian3.packedLength,t.Ellipsoid.unpack(a,r,I),r+=t.Ellipsoid.packedLength,f.Rectangle.unpack(a,r,m)}(a.packedBuffer),o=2===w.indexBytesPerElement?new Uint16Array(a.indices):new Uint32Array(a.indices);var s,d,c,l=new Uint16Array(a.positions),p=new Uint32Array(a.counts),g=new Uint32Array(a.indexCounts),b=new Uint32Array(a.batchIds),O=new Uint32Array(a.batchTableColors),P=new Array(p.length),U=y,F=I,S=m,D=w.min,R=w.max,M=a.minimumHeights,_=a.maximumHeights;e.defined(M)&&e.defined(_)&&(M=new Float32Array(M),_=new Float32Array(_));var G=l.length/2,Y=l.subarray(0,G),V=l.subarray(G,2*G);u.AttributeCompression.zigZagDeltaDecode(Y,V);var H=new Float32Array(3*G);for(s=0;s<G;++s){var W=Y[s],z=V[s],Z=r.CesiumMath.lerp(S.west,S.east,W/32767),j=r.CesiumMath.lerp(S.south,S.north,z/32767),q=t.Cartographic.fromRadians(Z,j,0,B),J=F.cartographicToCartesian(q,A);n.Cartesian3.pack(J,H,3*s)}var K=p.length,Q=new Array(K),X=new Array(K),$=0,ee=0;for(s=0;s<K;++s)Q[s]=$,X[s]=ee,$+=p[s],ee+=g[s];var ae,re=new Float32Array(3*G*2),ne=new Uint16Array(2*G),te=new Uint32Array(X.length),ie=new Uint32Array(g.length),oe=[],se={};for(s=0;s<K;++s)c=O[s],e.defined(se[c])?(se[c].positionLength+=p[s],se[c].indexLength+=g[s],se[c].batchIds.push(s)):se[c]={positionLength:p[s],indexLength:g[s],offset:0,indexOffset:0,batchIds:[s]};var fe=0,de=0;for(c in se)if(se.hasOwnProperty(c)){(ae=se[c]).offset=fe,ae.indexOffset=de;var ce=2*ae.positionLength,ue=2*ae.indexLength+6*ae.positionLength;fe+=ce,de+=ue,ae.indexLength=ue}var he=[];for(c in se)se.hasOwnProperty(c)&&(ae=se[c],he.push({color:v.Color.fromRgba(parseInt(c)),offset:ae.indexOffset,count:ae.indexLength,batchIds:ae.batchIds}));for(s=0;s<K;++s){var le=(ae=se[c=O[s]]).offset,pe=3*le,ge=le,be=Q[s],Ce=p[s],ve=b[s],ye=D,Ie=R;e.defined(M)&&e.defined(_)&&(ye=M[s],Ie=_[s]);var me=Number.POSITIVE_INFINITY,we=Number.NEGATIVE_INFINITY,xe=Number.POSITIVE_INFINITY,Ae=Number.NEGATIVE_INFINITY;for(d=0;d<Ce;++d){var Ee=n.Cartesian3.unpack(H,3*be+3*d,A);F.scaleToGeodeticSurface(Ee,Ee);var Ne=F.cartesianToCartographic(Ee,B),Te=Ne.latitude,ke=Ne.longitude;me=Math.min(Te,me),we=Math.max(Te,we),xe=Math.min(ke,xe),Ae=Math.max(ke,Ae);var Be=F.geodeticSurfaceNormal(Ee,E),Le=n.Cartesian3.multiplyByScalar(Be,ye,N),Oe=n.Cartesian3.add(Ee,Le,T);Le=n.Cartesian3.multiplyByScalar(Be,Ie,Le);var Pe=n.Cartesian3.add(Ee,Le,k);n.Cartesian3.subtract(Pe,U,Pe),n.Cartesian3.subtract(Oe,U,Oe),n.Cartesian3.pack(Pe,re,pe),n.Cartesian3.pack(Oe,re,pe+3),ne[ge]=ve,ne[ge+1]=ve,pe+=6,ge+=2}(S=L).west=xe,S.east=Ae,S.south=me,S.north=we,P[s]=C.OrientedBoundingBox.fromRectangle(S,D,R,F);var Ue=ae.indexOffset,Fe=X[s],Se=g[s];for(te[s]=Ue,d=0;d<Se;d+=3){var De=o[Fe+d]-be,Re=o[Fe+d+1]-be,Me=o[Fe+d+2]-be;oe[Ue++]=2*De+le,oe[Ue++]=2*Re+le,oe[Ue++]=2*Me+le,oe[Ue++]=2*Me+1+le,oe[Ue++]=2*Re+1+le,oe[Ue++]=2*De+1+le}for(d=0;d<Ce;++d){var _e=d,Ge=(d+1)%Ce;oe[Ue++]=2*_e+1+le,oe[Ue++]=2*Ge+le,oe[Ue++]=2*_e+le,oe[Ue++]=2*_e+1+le,oe[Ue++]=2*Ge+1+le,oe[Ue++]=2*Ge+le}ae.offset+=2*Ce,ae.indexOffset=Ue,ie[s]=Ue-te[s]}oe=h.IndexDatatype.createTypedArray(re.length/3,oe);for(var Ye=he.length,Ve=0;Ve<Ye;++Ve){for(var He=he[Ve].batchIds,We=0,ze=He.length,Ze=0;Ze<ze;++Ze)We+=ie[He[Ze]];he[Ve].count=We}var je=x(2===oe.BYTES_PER_ELEMENT?h.IndexDatatype.UNSIGNED_SHORT:h.IndexDatatype.UNSIGNED_INT,P,he);return i.push(re.buffer,oe.buffer,te.buffer,ie.buffer,ne.buffer,je.buffer),{positions:re.buffer,indices:oe.buffer,indexOffsets:te.buffer,indexCounts:ie.buffer,batchIds:ne.buffer,packedBuffer:je.buffer}}))}));
