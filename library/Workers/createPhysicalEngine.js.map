{"version":3,"file":"createPhysicalEngine.js","sources":["../../../../Source/Extension/Source/Physical/PhysicalLogicType.js","../../../../Source/Scene/Axis.js","../../../../Source/WorkersES6/createPhysicalEngine.js"],"sourcesContent":["var PhysicalLogicType = {\r\n    ADD_PRIMITIVE : 0,\r\n    ADD_SURFACE : 1,\r\n    UPDATE : 2,\r\n    PICK_FROM_RAY : 3,//射线PICK\r\n    UPDATE_INSTANCE_MATRIX : 4//更新lod树的matrix\r\n};\r\nexport default Object.freeze(PhysicalLogicType);\r\n","import Check from '../Core/Check.js';\r\nimport CesiumMath from '../Core/Math.js';\r\nimport Matrix3 from '../Core/Matrix3.js';\r\nimport Matrix4 from '../Core/Matrix4.js';\r\n\r\n    /**\r\n     * An enum describing the x, y, and z axes and helper conversion functions.\r\n     *\r\n     * @exports Axis\r\n     * @private\r\n     */\r\n    var Axis = {\r\n        /**\r\n         * Denotes the x-axis.\r\n         *\r\n         * @type {Number}\r\n         * @constant\r\n         */\r\n        X : 0,\r\n\r\n        /**\r\n         * Denotes the y-axis.\r\n         *\r\n         * @type {Number}\r\n         * @constant\r\n         */\r\n        Y : 1,\r\n\r\n        /**\r\n         * Denotes the z-axis.\r\n         *\r\n         * @type {Number}\r\n         * @constant\r\n         */\r\n        Z : 2,\r\n\r\n        /**\r\n         * Matrix used to convert from y-up to z-up\r\n         *\r\n         * @type {Matrix4}\r\n         * @constant\r\n         */\r\n        Y_UP_TO_Z_UP : Matrix4.fromRotationTranslation(Matrix3.fromRotationX(CesiumMath.PI_OVER_TWO)),\r\n\r\n        /**\r\n         * Matrix used to convert from z-up to y-up\r\n         *\r\n         * @type {Matrix4}\r\n         * @constant\r\n         */\r\n        Z_UP_TO_Y_UP : Matrix4.fromRotationTranslation(Matrix3.fromRotationX(-CesiumMath.PI_OVER_TWO)),\r\n\r\n        /**\r\n         * Matrix used to convert from x-up to z-up\r\n         *\r\n         * @type {Matrix4}\r\n         * @constant\r\n         */\r\n        X_UP_TO_Z_UP : Matrix4.fromRotationTranslation(Matrix3.fromRotationY(-CesiumMath.PI_OVER_TWO)),\r\n\r\n        /**\r\n         * Matrix used to convert from z-up to x-up\r\n         *\r\n         * @type {Matrix4}\r\n         * @constant\r\n         */\r\n        Z_UP_TO_X_UP : Matrix4.fromRotationTranslation(Matrix3.fromRotationY(CesiumMath.PI_OVER_TWO)),\r\n\r\n        /**\r\n         * Matrix used to convert from x-up to y-up\r\n         *\r\n         * @type {Matrix4}\r\n         * @constant\r\n         */\r\n        X_UP_TO_Y_UP : Matrix4.fromRotationTranslation(Matrix3.fromRotationZ(CesiumMath.PI_OVER_TWO)),\r\n\r\n        /**\r\n         * Matrix used to convert from y-up to x-up\r\n         *\r\n         * @type {Matrix4}\r\n         * @constant\r\n         */\r\n        Y_UP_TO_X_UP : Matrix4.fromRotationTranslation(Matrix3.fromRotationZ(-CesiumMath.PI_OVER_TWO)),\r\n\r\n        /**\r\n         * Gets the axis by name\r\n         *\r\n         * @param {String} name The name of the axis.\r\n         * @returns {Number} The axis enum.\r\n         */\r\n        fromName : function(name) {\r\n            //>>includeStart('debug', pragmas.debug);\r\n            Check.typeOf.string('name', name);\r\n            //>>includeEnd('debug');\r\n\r\n            return Axis[name];\r\n        }\r\n    };\r\nexport default Object.freeze(Axis);\r\n","/* global require */\r\nimport defined from '../Core/defined.js';\r\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\r\nimport PhysicalLogicType from '../Extension/Source/Physical/PhysicalLogicType.js';\r\nimport DeveloperError from '../Core/DeveloperError.js';\r\nimport materem from '../ThirdParty/Workers/materem.js';\r\nimport Matrix4 from '../Core/Matrix4.js';\r\nimport Axis from '../Scene/Axis.js';\r\n\r\nvar physicalModule;\r\nvar lbSpaMgr;\r\nvar keyCollection;\r\nvar globeSurfaceTileCollection;\r\n\r\nfunction taskDispatcher(parameters) {\r\n    switch (parameters.logicType) {\r\n        case PhysicalLogicType.UPDATE_INSTANCE_MATRIX: {\r\n            updateLodInstanceMatrix(parameters);\r\n            break;\r\n        }\r\n        case PhysicalLogicType.ADD_PRIMITIVE: {\r\n            addPrimitives(parameters);\r\n            break;\r\n        }\r\n        case PhysicalLogicType.ADD_SURFACE : {\r\n            globeSurfaceTileHandler(parameters);\r\n            break;\r\n        }\r\n        case PhysicalLogicType.UPDATE: {\r\n            lbSpaMgr.EnableAllPrimitiveSelected(false);\r\n            selectPrimitive(parameters.selectedGuidArray);\r\n            removePrimitive(parameters.removedGuidArray);\r\n            selectSurface(parameters.selectedSurfaceArray);\r\n            removeSurface(parameters.removedSurfaceArray);\r\n            break;\r\n        }\r\n        case PhysicalLogicType.PICK_FROM_RAY: {\r\n            return getSearchResult(parameters);\r\n        }\r\n        default:\r\n            throw new DeveloperError('physicalLogicType is not a valid value.');\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction globeSurfaceTileHandler(parameters) {\r\n    var surfaceTiles = parameters.surfaceTiles;\r\n    for (var tile of surfaceTiles) {\r\n        var guid = tile.guid;\r\n        var physicalArray = tile.physicalArray;\r\n        //serial read\r\n        var pSerialRead = new physicalModule.LBSpaSerial();\r\n        var pBufferAry = physicalModule._malloc(physicalArray.byteLength);\r\n        physicalModule.HEAPU8.set(physicalArray, pBufferAry);\r\n        var pPrimitiveSpatial = pSerialRead.ReadSpatial(pBufferAry, physicalArray.byteLength);\r\n        physicalModule._free(pBufferAry);\r\n        physicalModule.destroy(pSerialRead);\r\n\r\n        var pointer = lbSpaMgr.AddPrimitiveSpatial(pPrimitiveSpatial);\r\n        if (defined(tile.projectCenterMatrixArray)) {\r\n            var pMat = new physicalModule.LBSpaMat;\r\n            cvtMatrixAryToMat(tile.projectCenterMatrixArray, pMat);\r\n            lbSpaMgr.SetPrimitiveSpatialMat(pointer, pMat);\r\n            physicalModule.destroy(pMat);\r\n        }\r\n        globeSurfaceTileCollection.set(guid, pointer);\r\n    }\r\n}\r\n\r\nfunction selectPrimitive(guidArray) {\r\n    if (defined(guidArray) && guidArray.length > 0) {\r\n        for (var index = 0; index < guidArray.length; ++index) {\r\n            var guid = guidArray[index];\r\n            if (keyCollection.has(guid)) {\r\n                var array = keyCollection.get(guid);\r\n                for (var pointer of array) {\r\n                    lbSpaMgr.EnablePrimitiveSelected(pointer, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction selectSurface(guidArray) {\r\n    if (defined(guidArray) && guidArray.length > 0) {\r\n        for (var index = 0; index < guidArray.length; ++index) {\r\n            var guid = guidArray[index];\r\n            if (globeSurfaceTileCollection.has(guid)) {\r\n                var pointer = globeSurfaceTileCollection.get(guid);\r\n                if (defined(pointer)) {\r\n                    lbSpaMgr.EnablePrimitiveSelected(pointer, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction removeSurface(guidArray) {\r\n    if (defined(guidArray) && guidArray.length > 0) {\r\n        for (var index = 0; index < guidArray.length; ++index) {\r\n            var guid = guidArray[index];\r\n            if (globeSurfaceTileCollection.has(guid)) {\r\n                var pointer = globeSurfaceTileCollection.get(guid);\r\n                lbSpaMgr.RemovePrimitiveSpatial(pointer);\r\n                globeSurfaceTileCollection.delete(guid);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction addPrimitives(parameters) {\r\n    var projectCenterMatrixArray = parameters.projectCenterMatrixArray;\r\n    var primitives = parameters.primitives;\r\n    if (primitives.length > 0) {\r\n        for (var primitive of primitives) {\r\n            addPrimitive(projectCenterMatrixArray, primitive);\r\n        }\r\n    }\r\n}\r\n\r\n//默认矩阵\r\nvar defautlNodeMatrixArray = Matrix4.toArray(Axis.Y_UP_TO_Z_UP);\r\n\r\nfunction addPrimitive(projectCenterMatrixArray, primitive) {\r\n    var modelGUID = primitive.guid;\r\n    var physicalArray = primitive.physicalArray;\r\n    var pointer;\r\n\r\n    //serial read\r\n    var pSerialRead = new physicalModule.LBSpaSerial();\r\n    var pBufferAry = physicalModule._malloc(physicalArray.byteLength);\r\n    physicalModule.HEAPU8.set(physicalArray, pBufferAry);\r\n    var pPrimitiveSpatial = pSerialRead.ReadSpatial(pBufferAry, physicalArray.byteLength);\r\n    physicalModule._free(pBufferAry);\r\n    physicalModule.destroy(pSerialRead);\r\n\r\n    if (defined(primitive.instanceMatrixTypeArray) || defined(primitive.lodInstanceMatrixTypeArray)) {\r\n        var pPrimitiveCluster = lbSpaMgr.CreatePrimitiveCluster(pPrimitiveSpatial);\r\n        pointer = lbSpaMgr.AddPrimitiveSpatial(pPrimitiveCluster);\r\n\r\n        var isLodInstance = defined(primitive.lodInstanceMatrixTypeArray);\r\n        var nodeMatrixArray = isLodInstance ? defautlNodeMatrixArray : undefined;\r\n        var instanceArray = isLodInstance ? primitive.lodInstanceMatrixTypeArray : primitive.instanceMatrixTypeArray;\r\n        setInstanceMatrix(pPrimitiveCluster, projectCenterMatrixArray, nodeMatrixArray, instanceArray, isLodInstance);\r\n    } else {\r\n        pointer = lbSpaMgr.AddPrimitiveSpatial(pPrimitiveSpatial);\r\n        setSpatialMatrix(pointer, projectCenterMatrixArray);\r\n    }\r\n    addToKeyCollection(modelGUID, pointer);\r\n\r\n    return pointer;\r\n}\r\n\r\nfunction setSpatialMatrix(pointer, projectCenterMatrixArray) {\r\n    if (defined(projectCenterMatrixArray)) {\r\n        var pMat = new physicalModule.LBSpaMat;\r\n        cvtMatrixAryToMat(projectCenterMatrixArray, pMat);\r\n        lbSpaMgr.SetPrimitiveSpatialMat(pointer, pMat);\r\n        physicalModule.destroy(pMat);\r\n    }\r\n}\r\n\r\nvar projectCenterMatrix = new Matrix4();\r\nvar nodeMatrix = new Matrix4();\r\nvar instanceMatrix = new Matrix4();\r\n\r\nfunction setInstanceMatrix(primitiveCluster, projectCenterMatrixArray, nodeMatrixArray, instanceMatrixTypeArray, isLodInstance) {\r\n    defined(projectCenterMatrixArray) && Matrix4.fromArray(projectCenterMatrixArray, 0, projectCenterMatrix);\r\n    defined(nodeMatrixArray) && Matrix4.fromArray(nodeMatrixArray, 0, nodeMatrix);\r\n    for (var index = 0; index < instanceMatrixTypeArray.length; index += 16) {\r\n        Matrix4.fromArray(instanceMatrixTypeArray, index, instanceMatrix);\r\n        if (defined(nodeMatrixArray)) {\r\n            Matrix4.multiply(instanceMatrix, nodeMatrix, instanceMatrix);\r\n        }\r\n        if (!isLodInstance && defined(projectCenterMatrixArray)) {\r\n            //静态模型Instance\r\n            Matrix4.multiply(projectCenterMatrix, instanceMatrix, instanceMatrix);\r\n        }\r\n        var pMat = new physicalModule.LBSpaMat();\r\n        cvtMatrixAryToMat(instanceMatrix, pMat);\r\n        primitiveCluster.SetIndexMatrix(index / 16, pMat);\r\n        physicalModule.destroy(pMat);\r\n    }\r\n}\r\n\r\nfunction updateLodInstanceMatrix(parameters) {\r\n    var instanceMatrixArray = parameters.instanceMatrixArray;\r\n    for (var instance of instanceMatrixArray) {\r\n        var modelGUID = instance.guid;\r\n        var instanceMatrixTypeArray = instance.instanceMatrixTypeArray;\r\n        if (keyCollection.has(modelGUID)) {\r\n            var modelArray = keyCollection.get(modelGUID);\r\n            for (var index = 0; index < modelArray.length; ++index) {\r\n                var pointer = modelArray[index];\r\n                var primitiveCluster = lbSpaMgr.GetPrimitiveCluster(pointer);\r\n                if (defined(primitiveCluster)) {\r\n                    primitiveCluster.RemoveAllMatrix();\r\n                    setInstanceMatrix(primitiveCluster, undefined, defautlNodeMatrixArray, instanceMatrixTypeArray, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction cvtMatrixAryToMat(pMatrixAry, pMat) {\r\n    for (var i = 0; i < 4; ++i) {\r\n        var cCol = pMat.At(i);\r\n        cCol.x = pMatrixAry[i * 4];\r\n        cCol.y = pMatrixAry[i * 4 + 1];\r\n        cCol.z = pMatrixAry[i * 4 + 2];\r\n        cCol.w = pMatrixAry[i * 4 + 3];\r\n    }\r\n}\r\n\r\nfunction addToKeyCollection(modelGUID, pointer) {\r\n    var modelArray;\r\n    if (keyCollection.has(modelGUID)) {\r\n        modelArray = keyCollection.get(modelGUID);\r\n        modelArray.push(pointer);\r\n    } else {\r\n        modelArray = [];\r\n        modelArray.push(pointer);\r\n        keyCollection.set(modelGUID, modelArray);\r\n    }\r\n}\r\n\r\nfunction removePrimitive(guidArray) {\r\n    if (defined(guidArray) && guidArray.length > 0) {\r\n        for (var index = 0; index < guidArray.length; ++index) {\r\n            var guid = guidArray[index];\r\n            if (keyCollection.has(guid)) {\r\n                var array = keyCollection.get(guid);\r\n                for (var pointer of array) {\r\n                    lbSpaMgr.RemovePrimitiveSpatial(pointer);\r\n                }\r\n                keyCollection.delete(guid);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSearchResult(parameters) {\r\n    var result = {};\r\n    var rayArray = parameters.ray;\r\n    var lineMode = parameters.lineMode;\r\n    var triangleMode = parameters.triangleMode;\r\n    var selectEdge = defined(parameters.selectEdge) ? parameters.selectEdge : false;\r\n    var maxDist = defined(parameters.maxDist) ? parameters.maxDist : 0.1;\r\n\r\n    if (lineMode) {\r\n        result.lineMode = {};\r\n        getStepLineResult(rayArray, selectEdge, maxDist, result.lineMode);\r\n    }\r\n\r\n    if (triangleMode) {\r\n        result.triangleMode = {};\r\n        getTriangleResult(rayArray, selectEdge, maxDist, result.triangleMode);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getTriangleResult(rayArray, selectEdge, maxDist, result) {\r\n    pickTriangleFromRay(rayArray, false, maxDist, result);\r\n    if (selectEdge) {\r\n        pickTriangleFromRay(rayArray, true, maxDist, result);\r\n    }\r\n}\r\n\r\nfunction pickTriangleFromRay(rayArray, selectEdge, maxDist, result) {\r\n    var cSpaSearthCondition = new physicalModule.LBSpaSearthCondition();\r\n    cSpaSearthCondition.EnableTriangleSearch(true);\r\n    cSpaSearthCondition.SetRay(rayArray[0], rayArray[1], rayArray[2], rayArray[3], rayArray[4], rayArray[5], maxDist, selectEdge);\r\n    var cSpaSearthResult = new physicalModule.LBSpaSearthResult();\r\n    if (lbSpaMgr.Search(cSpaSearthCondition, cSpaSearthResult)) {\r\n        if (selectEdge) {\r\n            result.primitives = [];\r\n            for (var index = 0; index < cSpaSearthResult.GetResultElemSize(); ++index) {\r\n                var primitiveEdge = {};\r\n                getSpaTriangleSelElem(cSpaSearthResult.GetResultElem(index), primitiveEdge);\r\n                result.primitives.push(primitiveEdge);\r\n            }\r\n        } else {\r\n            var pickPosition = cSpaSearthResult.GetPickPt();\r\n            if (defined(pickPosition)) {\r\n                result.pickPosition = {\r\n                    x: pickPosition.x,\r\n                    y: pickPosition.y,\r\n                    z: pickPosition.z\r\n                };\r\n            }\r\n        }\r\n    }\r\n    physicalModule.destroy(cSpaSearthCondition);\r\n    physicalModule.destroy(cSpaSearthResult);\r\n}\r\n\r\nfunction getSpaTriangleSelElem(cSelElem, result) {\r\n    var iPrimitiveId = cSelElem.GetPrimitiveId();\r\n    var bIsCluster = cSelElem.IsCluster();\r\n    // console.log('primitive id:' + iPrimitiveId + ', iscluster:' + bIsCluster);\r\n    result.primitiveId = iPrimitiveId;\r\n    result.isCluster = bIsCluster;\r\n    result.triangles = [];\r\n\r\n    for (var i = 0; i < cSelElem.GetSelIndexSize(); ++i) {\r\n        var currentTriangle = {};\r\n        var iTriNo = cSelElem.GetSelIndex(i);\r\n        var iPtIndex0 = cSelElem.GetSelIndexIndex(iTriNo * 3);\r\n        var iPtIndex1 = cSelElem.GetSelIndexIndex(iTriNo * 3 + 1);\r\n        var iPtIndex2 = cSelElem.GetSelIndexIndex(iTriNo * 3 + 2);\r\n\r\n        currentTriangle.vertices = [\r\n            {x: cSelElem.GetPtX(iPtIndex0), y: cSelElem.GetPtY(iPtIndex0), z: cSelElem.GetPtZ(iPtIndex0)},\r\n            {x: cSelElem.GetPtX(iPtIndex1), y: cSelElem.GetPtY(iPtIndex1), z: cSelElem.GetPtZ(iPtIndex1)},\r\n            {x: cSelElem.GetPtX(iPtIndex2), y: cSelElem.GetPtY(iPtIndex2), z: cSelElem.GetPtZ(iPtIndex2)}];\r\n        if (cSelElem.IsHaveBatchId()) {\r\n            var iBatchId0 = cSelElem.GetBatchId(iPtIndex0);\r\n            var iBatchId1 = cSelElem.GetBatchId(iPtIndex1);\r\n            var iBatchId2 = cSelElem.GetBatchId(iPtIndex2);\r\n            currentTriangle.batchId = [iBatchId0, iBatchId1, iBatchId2];\r\n        }\r\n\r\n        if (cSelElem.IsHaveCheckEdge()) {\r\n            currentTriangle.edges = [];\r\n            var iCheckEdge = cSelElem.GetSelIndexCheckEdge(i);\r\n            if (iCheckEdge & 0x01) {\r\n                //cPt0 cPt1\r\n                currentTriangle.edges.push(0, 1);\r\n            }\r\n            if (iCheckEdge & 0x02) {\r\n                //cPt1 cPt2\r\n                currentTriangle.edges.push(1, 2);\r\n            }\r\n            if (iCheckEdge & 0x04) {\r\n                //cPt2 cPt0\r\n                currentTriangle.edges.push(2, 0);\r\n            }\r\n        }\r\n        result.triangles.push(currentTriangle);\r\n    }\r\n}\r\n\r\nfunction getStepLineResult(rayArray, selectEdge, maxDist, result) {\r\n    pickStepLineFromRay(rayArray, false, maxDist, result);\r\n    if (selectEdge) {\r\n        pickStepLineFromRay(rayArray, true, maxDist, result);\r\n    }\r\n}\r\n\r\nfunction pickStepLineFromRay(rayArray, selectEdge, maxDist, result) {\r\n    var cSpaSearthCondition = new physicalModule.LBSpaSearthCondition();\r\n    cSpaSearthCondition.EnableTriangleSearch(false);\r\n    cSpaSearthCondition.SetRay(rayArray[0], rayArray[1], rayArray[2], rayArray[3], rayArray[4], rayArray[5], maxDist, selectEdge);\r\n    var cSpaSearthResult = new physicalModule.LBSpaSearthResult();\r\n    if (lbSpaMgr.Search(cSpaSearthCondition, cSpaSearthResult)) {\r\n        if (selectEdge) {\r\n            result.primitives = [];\r\n            for (var index = 0; index < cSpaSearthResult.GetResultElemSize(); ++index) {\r\n                var primitiveLine = {};\r\n                getSpaStepLineSelElem(cSpaSearthResult.GetResultElem(index), primitiveLine);\r\n                result.primitives.push(primitiveLine);\r\n            }\r\n        } else {\r\n            var pickPosition = cSpaSearthResult.GetPickPt();\r\n            if (defined(pickPosition)) {\r\n                result.pickPosition = {\r\n                    x: pickPosition.x,\r\n                    y: pickPosition.y,\r\n                    z: pickPosition.z\r\n                };\r\n            }\r\n        }\r\n    }\r\n    physicalModule.destroy(cSpaSearthCondition);\r\n    physicalModule.destroy(cSpaSearthResult);\r\n}\r\n\r\nfunction getSpaStepLineSelElem(cSelElem, result) {\r\n    var iPrimitiveId = cSelElem.GetPrimitiveId();\r\n    var bIsCluster = cSelElem.IsCluster();\r\n    // console.log('primitive key:' + iPrimitiveId + ', iscluster:' + bIsCluster);\r\n    result.primitiveId = iPrimitiveId;\r\n    result.isCluster = bIsCluster;\r\n    result.lines = [];\r\n\r\n    for (var i = 0; i < cSelElem.GetSelIndexSize(); ++i) {\r\n        var currentLine = {};\r\n        var iSegNo = cSelElem.GetSelIndex(i);\r\n        var iPtIndex0 = cSelElem.GetSelIndexIndex(iSegNo * 2);\r\n        var iPtIndex1 = cSelElem.GetSelIndexIndex(iSegNo * 2 + 1);\r\n\r\n        currentLine.vertices = [\r\n            {x: cSelElem.GetPtX(iPtIndex0), y: cSelElem.GetPtY(iPtIndex0), z: cSelElem.GetPtZ(iPtIndex0)},\r\n            {x: cSelElem.GetPtX(iPtIndex1), y: cSelElem.GetPtY(iPtIndex1), z: cSelElem.GetPtZ(iPtIndex1)}];\r\n        if (cSelElem.IsHaveBatchId()) {\r\n            var iBatchId0 = cSelElem.GetBatchId(iPtIndex0);//cluster batchid is index\r\n            var iBatchId1 = cSelElem.GetBatchId(iPtIndex1);\r\n            currentLine.batchId = [iBatchId0, iBatchId1];\r\n        }\r\n        result.lines.push(currentLine);\r\n    }\r\n}\r\n\r\nfunction createPhysicalEngine(event) {\r\n    var data = event.data;\r\n    var wasmConfig = data.webAssemblyConfig;\r\n    if (defined(wasmConfig)) {\r\n        if(defined(wasmConfig.debug)){\r\n            return require([wasmConfig.debug], function (currentModule) {\r\n                physicalModule = currentModule();\r\n                lbSpaMgr = new physicalModule.LBSpaMgr();\r\n                keyCollection = new Map();\r\n                globeSurfaceTileCollection = new Map();\r\n                self.onmessage = createTaskProcessorWorker(taskDispatcher);\r\n                self.postMessage(true);\r\n            });\r\n        }\r\n        fetch(wasmConfig.wasmBinaryFileES6)\r\n            .then(response => response.arrayBuffer())\r\n            .then(function (bytes) {\r\n                var WebAssemblyType = {\r\n                    wasmBinary: bytes,\r\n                    onModuleLoaded: function (currentModule) {\r\n                        physicalModule = currentModule;\r\n                        lbSpaMgr = new physicalModule.LBSpaMgr();\r\n                        keyCollection = new Map();\r\n                        globeSurfaceTileCollection = new Map();\r\n                        self.onmessage = createTaskProcessorWorker(taskDispatcher);\r\n                        self.postMessage(true);\r\n                    }\r\n                };\r\n\r\n                materem(WebAssemblyType);\r\n            });\r\n    }\r\n}\r\n\r\nexport default createPhysicalEngine;\r\n"],"names":["Matrix4","Matrix3","CesiumMath","Check","PhysicalLogicType","DeveloperError","defined","Axis","materem"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAAA,IAAI,iBAAiB,GAAG;IACxB,IAAI,aAAa,GAAG,CAAC;IACrB,IAAI,WAAW,GAAG,CAAC;IACnB,IAAI,MAAM,GAAG,CAAC;IACd,IAAI,aAAa,GAAG,CAAC;IACrB,IAAI,sBAAsB,GAAG,CAAC;IAC9B,CAAC,CAAC;AACF,8BAAe,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC;;ICF3C;IACJ;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,IAAI,GAAG;IACf;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,CAAC,GAAG,CAAC;AACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,CAAC,GAAG,CAAC;AACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,CAAC,GAAG,CAAC;AACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,YAAY,GAAGA,eAAO,CAAC,uBAAuB,CAACC,eAAO,CAAC,aAAa,CAACC,qBAAU,CAAC,WAAW,CAAC,CAAC;AACrG;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,YAAY,GAAGF,eAAO,CAAC,uBAAuB,CAACC,eAAO,CAAC,aAAa,CAAC,CAACC,qBAAU,CAAC,WAAW,CAAC,CAAC;AACtG;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,YAAY,GAAGF,eAAO,CAAC,uBAAuB,CAACC,eAAO,CAAC,aAAa,CAAC,CAACC,qBAAU,CAAC,WAAW,CAAC,CAAC;AACtG;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,YAAY,GAAGF,eAAO,CAAC,uBAAuB,CAACC,eAAO,CAAC,aAAa,CAACC,qBAAU,CAAC,WAAW,CAAC,CAAC;AACrG;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,YAAY,GAAGF,eAAO,CAAC,uBAAuB,CAACC,eAAO,CAAC,aAAa,CAACC,qBAAU,CAAC,WAAW,CAAC,CAAC;AACrG;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,YAAY,GAAGF,eAAO,CAAC,uBAAuB,CAACC,eAAO,CAAC,aAAa,CAAC,CAACC,qBAAU,CAAC,WAAW,CAAC,CAAC;AACtG;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,QAAQ,GAAG,SAAS,IAAI,EAAE;IAClC;IACA,YAAYC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC9C;AACA;IACA,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,SAAS;IACT,KAAK,CAAC;AACN,iBAAe,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;IClGnC;AACA,AAOA;IACA,IAAI,cAAc,CAAC;IACnB,IAAI,QAAQ,CAAC;IACb,IAAI,aAAa,CAAC;IAClB,IAAI,0BAA0B,CAAC;AAC/B;IACA,SAAS,cAAc,CAAC,UAAU,EAAE;IACpC,IAAI,QAAQ,UAAU,CAAC,SAAS;IAChC,QAAQ,KAAKC,mBAAiB,CAAC,sBAAsB,EAAE;IACvD,YAAY,uBAAuB,CAAC,UAAU,CAAC,CAAC;IAChD,YAAY,MAAM;IAClB,SAAS;IACT,QAAQ,KAAKA,mBAAiB,CAAC,aAAa,EAAE;IAC9C,YAAY,aAAa,CAAC,UAAU,CAAC,CAAC;IACtC,YAAY,MAAM;IAClB,SAAS;IACT,QAAQ,KAAKA,mBAAiB,CAAC,WAAW,GAAG;IAC7C,YAAY,uBAAuB,CAAC,UAAU,CAAC,CAAC;IAChD,YAAY,MAAM;IAClB,SAAS;IACT,QAAQ,KAAKA,mBAAiB,CAAC,MAAM,EAAE;IACvC,YAAY,QAAQ,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;IACvD,YAAY,eAAe,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;IAC1D,YAAY,eAAe,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;IACzD,YAAY,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;IAC3D,YAAY,aAAa,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;IAC1D,YAAY,MAAM;IAClB,SAAS;IACT,QAAQ,KAAKA,mBAAiB,CAAC,aAAa,EAAE;IAC9C,YAAY,OAAO,eAAe,CAAC,UAAU,CAAC,CAAC;IAC/C,SAAS;IACT,QAAQ;IACR,YAAY,MAAM,IAAIC,oBAAc,CAAC,yCAAyC,CAAC,CAAC;IAChF,KAAK;IACL,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC;AACD;IACA,SAAS,uBAAuB,CAAC,UAAU,EAAE;IAC7C,IAAI,IAAI,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;IAC/C,IAAI,KAAK,IAAI,IAAI,IAAI,YAAY,EAAE;IACnC,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC7B,QAAQ,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;IAC/C;IACA,QAAQ,IAAI,WAAW,GAAG,IAAI,cAAc,CAAC,WAAW,EAAE,CAAC;IAC3D,QAAQ,IAAI,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IAC1E,QAAQ,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;IAC7D,QAAQ,IAAI,iBAAiB,GAAG,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC;IAC9F,QAAQ,cAAc,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACzC,QAAQ,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AAC5C;IACA,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC;IACtE,QAAQ,IAAIC,YAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE;IACpD,YAAY,IAAI,IAAI,GAAG,IAAI,cAAc,CAAC,QAAQ,CAAC;IACnD,YAAY,iBAAiB,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;IACnE,YAAY,QAAQ,CAAC,sBAAsB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC3D,YAAY,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACzC,SAAS;IACT,QAAQ,0BAA0B,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACtD,KAAK;IACL,CAAC;AACD;IACA,SAAS,eAAe,CAAC,SAAS,EAAE;IACpC,IAAI,IAAIA,YAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;IACpD,QAAQ,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;IAC/D,YAAY,IAAI,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IACxC,YAAY,IAAI,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;IACzC,gBAAgB,IAAI,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpD,gBAAgB,KAAK,IAAI,OAAO,IAAI,KAAK,EAAE;IAC3C,oBAAoB,QAAQ,CAAC,uBAAuB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACpE,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA,SAAS,aAAa,CAAC,SAAS,EAAE;IAClC,IAAI,IAAIA,YAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;IACpD,QAAQ,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;IAC/D,YAAY,IAAI,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IACxC,YAAY,IAAI,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;IACtD,gBAAgB,IAAI,OAAO,GAAG,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnE,gBAAgB,IAAIA,YAAO,CAAC,OAAO,CAAC,EAAE;IACtC,oBAAoB,QAAQ,CAAC,uBAAuB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACpE,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA,SAAS,aAAa,CAAC,SAAS,EAAE;IAClC,IAAI,IAAIA,YAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;IACpD,QAAQ,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;IAC/D,YAAY,IAAI,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IACxC,YAAY,IAAI,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;IACtD,gBAAgB,IAAI,OAAO,GAAG,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnE,gBAAgB,QAAQ,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;IACzD,gBAAgB,0BAA0B,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACxD,aAAa;IACb,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA,SAAS,aAAa,CAAC,UAAU,EAAE;IACnC,IAAI,IAAI,wBAAwB,GAAG,UAAU,CAAC,wBAAwB,CAAC;IACvE,IAAI,IAAI,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;IAC3C,IAAI,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;IAC/B,QAAQ,KAAK,IAAI,SAAS,IAAI,UAAU,EAAE;IAC1C,YAAY,YAAY,CAAC,wBAAwB,EAAE,SAAS,CAAC,CAAC;IAC9D,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA;IACA,IAAI,sBAAsB,GAAGN,eAAO,CAAC,OAAO,CAACO,MAAI,CAAC,YAAY,CAAC,CAAC;AAChE;IACA,SAAS,YAAY,CAAC,wBAAwB,EAAE,SAAS,EAAE;IAC3D,IAAI,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC;IACnC,IAAI,IAAI,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC;IAChD,IAAI,IAAI,OAAO,CAAC;AAChB;IACA;IACA,IAAI,IAAI,WAAW,GAAG,IAAI,cAAc,CAAC,WAAW,EAAE,CAAC;IACvD,IAAI,IAAI,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACtE,IAAI,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;IACzD,IAAI,IAAI,iBAAiB,GAAG,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC;IAC1F,IAAI,cAAc,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACrC,IAAI,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AACxC;IACA,IAAI,IAAID,YAAO,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAIA,YAAO,CAAC,SAAS,CAAC,0BAA0B,CAAC,EAAE;IACrG,QAAQ,IAAI,iBAAiB,GAAG,QAAQ,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC;IACnF,QAAQ,OAAO,GAAG,QAAQ,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC;AAClE;IACA,QAAQ,IAAI,aAAa,GAAGA,YAAO,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;IAC1E,QAAQ,IAAI,eAAe,GAAG,aAAa,GAAG,sBAAsB,GAAG,SAAS,CAAC;IACjF,QAAQ,IAAI,aAAa,GAAG,aAAa,GAAG,SAAS,CAAC,0BAA0B,GAAG,SAAS,CAAC,uBAAuB,CAAC;IACrH,QAAQ,iBAAiB,CAAC,iBAAiB,EAAE,wBAAwB,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;IACtH,KAAK,MAAM;IACX,QAAQ,OAAO,GAAG,QAAQ,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC;IAClE,QAAQ,gBAAgB,CAAC,OAAO,EAAE,wBAAwB,CAAC,CAAC;IAC5D,KAAK;IACL,IAAI,kBAAkB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC3C;IACA,IAAI,OAAO,OAAO,CAAC;IACnB,CAAC;AACD;IACA,SAAS,gBAAgB,CAAC,OAAO,EAAE,wBAAwB,EAAE;IAC7D,IAAI,IAAIA,YAAO,CAAC,wBAAwB,CAAC,EAAE;IAC3C,QAAQ,IAAI,IAAI,GAAG,IAAI,cAAc,CAAC,QAAQ,CAAC;IAC/C,QAAQ,iBAAiB,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;IAC1D,QAAQ,QAAQ,CAAC,sBAAsB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACvD,QAAQ,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrC,KAAK;IACL,CAAC;AACD;IACA,IAAI,mBAAmB,GAAG,IAAIN,eAAO,EAAE,CAAC;IACxC,IAAI,UAAU,GAAG,IAAIA,eAAO,EAAE,CAAC;IAC/B,IAAI,cAAc,GAAG,IAAIA,eAAO,EAAE,CAAC;AACnC;IACA,SAAS,iBAAiB,CAAC,gBAAgB,EAAE,wBAAwB,EAAE,eAAe,EAAE,uBAAuB,EAAE,aAAa,EAAE;IAChI,IAAIM,YAAO,CAAC,wBAAwB,CAAC,IAAIN,eAAO,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,EAAE,mBAAmB,CAAC,CAAC;IAC7G,IAAIM,YAAO,CAAC,eAAe,CAAC,IAAIN,eAAO,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IAClF,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,uBAAuB,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE,EAAE;IAC7E,QAAQA,eAAO,CAAC,SAAS,CAAC,uBAAuB,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;IAC1E,QAAQ,IAAIM,YAAO,CAAC,eAAe,CAAC,EAAE;IACtC,YAAYN,eAAO,CAAC,QAAQ,CAAC,cAAc,EAAE,UAAU,EAAE,cAAc,CAAC,CAAC;IACzE,SAAS;IACT,QAAQ,IAAI,CAAC,aAAa,IAAIM,YAAO,CAAC,wBAAwB,CAAC,EAAE;IACjE;IACA,YAAYN,eAAO,CAAC,QAAQ,CAAC,mBAAmB,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;IAClF,SAAS;IACT,QAAQ,IAAI,IAAI,GAAG,IAAI,cAAc,CAAC,QAAQ,EAAE,CAAC;IACjD,QAAQ,iBAAiB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IAChD,QAAQ,gBAAgB,CAAC,cAAc,CAAC,KAAK,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;IAC1D,QAAQ,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrC,KAAK;IACL,CAAC;AACD;IACA,SAAS,uBAAuB,CAAC,UAAU,EAAE;IAC7C,IAAI,IAAI,mBAAmB,GAAG,UAAU,CAAC,mBAAmB,CAAC;IAC7D,IAAI,KAAK,IAAI,QAAQ,IAAI,mBAAmB,EAAE;IAC9C,QAAQ,IAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;IACtC,QAAQ,IAAI,uBAAuB,GAAG,QAAQ,CAAC,uBAAuB,CAAC;IACvE,QAAQ,IAAI,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IAC1C,YAAY,IAAI,UAAU,GAAG,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC1D,YAAY,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;IACpE,gBAAgB,IAAI,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAChD,gBAAgB,IAAI,gBAAgB,GAAG,QAAQ,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;IAC7E,gBAAgB,IAAIM,YAAO,CAAC,gBAAgB,CAAC,EAAE;IAC/C,oBAAoB,gBAAgB,CAAC,eAAe,EAAE,CAAC;IACvD,oBAAoB,iBAAiB,CAAC,gBAAgB,EAAE,SAAS,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,IAAI,CAAC,CAAC;IAC1H,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA,SAAS,iBAAiB,CAAC,UAAU,EAAE,IAAI,EAAE;IAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAChC,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9B,QAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACnC,QAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,QAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,QAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,KAAK;IACL,CAAC;AACD;IACA,SAAS,kBAAkB,CAAC,SAAS,EAAE,OAAO,EAAE;IAChD,IAAI,IAAI,UAAU,CAAC;IACnB,IAAI,IAAI,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IACtC,QAAQ,UAAU,GAAG,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAClD,QAAQ,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjC,KAAK,MAAM;IACX,QAAQ,UAAU,GAAG,EAAE,CAAC;IACxB,QAAQ,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjC,QAAQ,aAAa,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACjD,KAAK;IACL,CAAC;AACD;IACA,SAAS,eAAe,CAAC,SAAS,EAAE;IACpC,IAAI,IAAIA,YAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;IACpD,QAAQ,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;IAC/D,YAAY,IAAI,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IACxC,YAAY,IAAI,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;IACzC,gBAAgB,IAAI,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpD,gBAAgB,KAAK,IAAI,OAAO,IAAI,KAAK,EAAE;IAC3C,oBAAoB,QAAQ,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;IAC7D,iBAAiB;IACjB,gBAAgB,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3C,aAAa;IACb,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA,SAAS,eAAe,CAAC,UAAU,EAAE;IACrC,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;IACpB,IAAI,IAAI,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC;IAClC,IAAI,IAAI,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;IACvC,IAAI,IAAI,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;IAC/C,IAAI,IAAI,UAAU,GAAGA,YAAO,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC;IACpF,IAAI,IAAI,OAAO,GAAGA,YAAO,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;AACzE;IACA,IAAI,IAAI,QAAQ,EAAE;IAClB,QAAQ,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;IAC7B,QAAQ,iBAAiB,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC1E,KAAK;AACL;IACA,IAAI,IAAI,YAAY,EAAE;IACtB,QAAQ,MAAM,CAAC,YAAY,GAAG,EAAE,CAAC;IACjC,QAAQ,iBAAiB,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;IAC9E,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AACD;IACA,SAAS,iBAAiB,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE;IAClE,IAAI,mBAAmB,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IAC1D,IAAI,IAAI,UAAU,EAAE;IACpB,QAAQ,mBAAmB,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IAC7D,KAAK;IACL,CAAC;AACD;IACA,SAAS,mBAAmB,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE;IACpE,IAAI,IAAI,mBAAmB,GAAG,IAAI,cAAc,CAAC,oBAAoB,EAAE,CAAC;IACxE,IAAI,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACnD,IAAI,mBAAmB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IAClI,IAAI,IAAI,gBAAgB,GAAG,IAAI,cAAc,CAAC,iBAAiB,EAAE,CAAC;IAClE,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,EAAE;IAChE,QAAQ,IAAI,UAAU,EAAE;IACxB,YAAY,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;IACnC,YAAY,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,gBAAgB,CAAC,iBAAiB,EAAE,EAAE,EAAE,KAAK,EAAE;IACvF,gBAAgB,IAAI,aAAa,GAAG,EAAE,CAAC;IACvC,gBAAgB,qBAAqB,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,aAAa,CAAC,CAAC;IAC5F,gBAAgB,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtD,aAAa;IACb,SAAS,MAAM;IACf,YAAY,IAAI,YAAY,GAAG,gBAAgB,CAAC,SAAS,EAAE,CAAC;IAC5D,YAAY,IAAIA,YAAO,CAAC,YAAY,CAAC,EAAE;IACvC,gBAAgB,MAAM,CAAC,YAAY,GAAG;IACtC,oBAAoB,CAAC,EAAE,YAAY,CAAC,CAAC;IACrC,oBAAoB,CAAC,EAAE,YAAY,CAAC,CAAC;IACrC,oBAAoB,CAAC,EAAE,YAAY,CAAC,CAAC;IACrC,iBAAiB,CAAC;IAClB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,cAAc,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAChD,IAAI,cAAc,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAC7C,CAAC;AACD;IACA,SAAS,qBAAqB,CAAC,QAAQ,EAAE,MAAM,EAAE;IACjD,IAAI,IAAI,YAAY,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;IACjD,IAAI,IAAI,UAAU,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;IAC1C;IACA,IAAI,MAAM,CAAC,WAAW,GAAG,YAAY,CAAC;IACtC,IAAI,MAAM,CAAC,SAAS,GAAG,UAAU,CAAC;IAClC,IAAI,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;AAC1B;IACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,eAAe,EAAE,EAAE,EAAE,CAAC,EAAE;IACzD,QAAQ,IAAI,eAAe,GAAG,EAAE,CAAC;IACjC,QAAQ,IAAI,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7C,QAAQ,IAAI,SAAS,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9D,QAAQ,IAAI,SAAS,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAClE,QAAQ,IAAI,SAAS,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAClE;IACA,QAAQ,eAAe,CAAC,QAAQ,GAAG;IACnC,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACzG,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACzG,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3G,QAAQ,IAAI,QAAQ,CAAC,aAAa,EAAE,EAAE;IACtC,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAC3D,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAC3D,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAC3D,YAAY,eAAe,CAAC,OAAO,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IACxE,SAAS;AACT;IACA,QAAQ,IAAI,QAAQ,CAAC,eAAe,EAAE,EAAE;IACxC,YAAY,eAAe,CAAC,KAAK,GAAG,EAAE,CAAC;IACvC,YAAY,IAAI,UAAU,GAAG,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAC9D,YAAY,IAAI,UAAU,GAAG,IAAI,EAAE;IACnC;IACA,gBAAgB,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,aAAa;IACb,YAAY,IAAI,UAAU,GAAG,IAAI,EAAE;IACnC;IACA,gBAAgB,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,aAAa;IACb,YAAY,IAAI,UAAU,GAAG,IAAI,EAAE;IACnC;IACA,gBAAgB,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,aAAa;IACb,SAAS;IACT,QAAQ,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC/C,KAAK;IACL,CAAC;AACD;IACA,SAAS,iBAAiB,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE;IAClE,IAAI,mBAAmB,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IAC1D,IAAI,IAAI,UAAU,EAAE;IACpB,QAAQ,mBAAmB,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IAC7D,KAAK;IACL,CAAC;AACD;IACA,SAAS,mBAAmB,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE;IACpE,IAAI,IAAI,mBAAmB,GAAG,IAAI,cAAc,CAAC,oBAAoB,EAAE,CAAC;IACxE,IAAI,mBAAmB,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;IACpD,IAAI,mBAAmB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IAClI,IAAI,IAAI,gBAAgB,GAAG,IAAI,cAAc,CAAC,iBAAiB,EAAE,CAAC;IAClE,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,EAAE;IAChE,QAAQ,IAAI,UAAU,EAAE;IACxB,YAAY,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;IACnC,YAAY,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,gBAAgB,CAAC,iBAAiB,EAAE,EAAE,EAAE,KAAK,EAAE;IACvF,gBAAgB,IAAI,aAAa,GAAG,EAAE,CAAC;IACvC,gBAAgB,qBAAqB,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,aAAa,CAAC,CAAC;IAC5F,gBAAgB,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtD,aAAa;IACb,SAAS,MAAM;IACf,YAAY,IAAI,YAAY,GAAG,gBAAgB,CAAC,SAAS,EAAE,CAAC;IAC5D,YAAY,IAAIA,YAAO,CAAC,YAAY,CAAC,EAAE;IACvC,gBAAgB,MAAM,CAAC,YAAY,GAAG;IACtC,oBAAoB,CAAC,EAAE,YAAY,CAAC,CAAC;IACrC,oBAAoB,CAAC,EAAE,YAAY,CAAC,CAAC;IACrC,oBAAoB,CAAC,EAAE,YAAY,CAAC,CAAC;IACrC,iBAAiB,CAAC;IAClB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,cAAc,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAChD,IAAI,cAAc,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAC7C,CAAC;AACD;IACA,SAAS,qBAAqB,CAAC,QAAQ,EAAE,MAAM,EAAE;IACjD,IAAI,IAAI,YAAY,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;IACjD,IAAI,IAAI,UAAU,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;IAC1C;IACA,IAAI,MAAM,CAAC,WAAW,GAAG,YAAY,CAAC;IACtC,IAAI,MAAM,CAAC,SAAS,GAAG,UAAU,CAAC;IAClC,IAAI,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;AACtB;IACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,eAAe,EAAE,EAAE,EAAE,CAAC,EAAE;IACzD,QAAQ,IAAI,WAAW,GAAG,EAAE,CAAC;IAC7B,QAAQ,IAAI,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7C,QAAQ,IAAI,SAAS,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9D,QAAQ,IAAI,SAAS,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAClE;IACA,QAAQ,WAAW,CAAC,QAAQ,GAAG;IAC/B,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACzG,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3G,QAAQ,IAAI,QAAQ,CAAC,aAAa,EAAE,EAAE;IACtC,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAC3D,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAC3D,YAAY,WAAW,CAAC,OAAO,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IACzD,SAAS;IACT,QAAQ,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACvC,KAAK;IACL,CAAC;AACD;IACA,SAAS,oBAAoB,CAAC,KAAK,EAAE;IACrC,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAC1B,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC;IAC5C,IAAI,IAAIA,YAAO,CAAC,UAAU,CAAC,EAAE;IAC7B,QAAQ,GAAGA,YAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACrC,YAAY,OAAO,OAAO,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,UAAU,aAAa,EAAE;IACxE,gBAAgB,cAAc,GAAG,aAAa,EAAE,CAAC;IACjD,gBAAgB,QAAQ,GAAG,IAAI,cAAc,CAAC,QAAQ,EAAE,CAAC;IACzD,gBAAgB,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;IAC1C,gBAAgB,0BAA0B,GAAG,IAAI,GAAG,EAAE,CAAC;IACvD,gBAAgB,IAAI,CAAC,SAAS,GAAG,yBAAyB,CAAC,cAAc,CAAC,CAAC;IAC3E,gBAAgB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACvC,aAAa,CAAC,CAAC;IACf,SAAS;IACT,QAAQ,KAAK,CAAC,UAAU,CAAC,iBAAiB,CAAC;IAC3C,aAAa,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC;IACrD,aAAa,IAAI,CAAC,UAAU,KAAK,EAAE;IACnC,gBAAgB,IAAI,eAAe,GAAG;IACtC,oBAAoB,UAAU,EAAE,KAAK;IACrC,oBAAoB,cAAc,EAAE,UAAU,aAAa,EAAE;IAC7D,wBAAwB,cAAc,GAAG,aAAa,CAAC;IACvD,wBAAwB,QAAQ,GAAG,IAAI,cAAc,CAAC,QAAQ,EAAE,CAAC;IACjE,wBAAwB,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;IAClD,wBAAwB,0BAA0B,GAAG,IAAI,GAAG,EAAE,CAAC;IAC/D,wBAAwB,IAAI,CAAC,SAAS,GAAG,yBAAyB,CAAC,cAAc,CAAC,CAAC;IACnF,wBAAwB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC/C,qBAAqB;IACrB,iBAAiB,CAAC;AAClB;IACA,gBAAgBE,eAAO,CAAC,eAAe,CAAC,CAAC;IACzC,aAAa,CAAC,CAAC;IACf,KAAK;IACL,CAAC;;;;;;;;"}