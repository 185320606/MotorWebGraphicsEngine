/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./when-4ca4e419","./Check-430b3551","./defineProperties-163ddb68","./Cartesian3-32451e63","./Ellipsoid-d2aa3b12","./Transforms-7b04d7e0","./Matrix4-33464f2b","./RuntimeError-443472b0","./Cartesian2-f49a1383","./FeatureDetection-0d4fee13","./WebGLConstants-2ddfa2f9","./ComponentDatatype-329b9462","./GeometryAttribute-b8faa946","./GeometryAttributes-614c63f8","./AttributeCompression-7809eba4","./GeometryPipeline-f9bdb2cf","./EncodedCartesian3-63b18b5e","./IndexDatatype-153fdd7f","./IntersectionTests-15d018f5","./Plane-84b14a0a","./VertexFormat-a4fe3a21","./GeometryInstance-d03f2889","./arrayRemoveDuplicates-c3fd0b84","./BoundingRectangle-c080f887","./EllipsoidTangentPlane-3967708f","./OrientedBoundingBox-51e874ad","./CoplanarPolygonGeometryLibrary-e1775e93","./ArcType-51c149e1","./EllipsoidRhumbLine-c004db91","./PolygonPipeline-d25dad97","./PolygonGeometryLibrary-ea4e2ec7"],(function(e,t,a,n,r,o,i,s,l,p,y,c,d,u,m,g,f,b,h,v,C,x,P,w,A,F,G,L,E,k,T){"use strict";var D=new n.Cartesian3,_=new w.BoundingRectangle,V=new l.Cartesian2,R=new l.Cartesian2,I=new n.Cartesian3,M=new n.Cartesian3,H=new n.Cartesian3,B=new n.Cartesian3,O=new n.Cartesian3,z=new n.Cartesian3,S=new o.Quaternion,N=new i.Matrix3,Q=new i.Matrix3,j=new n.Cartesian3;function U(e,t,r,s,p,y,m,g){var f=e.positions,h=k.PolygonPipeline.triangulate(e.positions2D,e.holes);h.length<3&&(h=[0,1,2]);var v=b.IndexDatatype.createTypedArray(f.length,h.length);v.set(h);var C=N;if(0!==s){var x=o.Quaternion.fromAxisAngle(y,s,S);if(C=i.Matrix3.fromQuaternion(x,C),t.tangent||t.bitangent){x=o.Quaternion.fromAxisAngle(y,-s,S);var P=i.Matrix3.fromQuaternion(x,Q);m=n.Cartesian3.normalize(i.Matrix3.multiplyByVector(P,m,m),m),t.bitangent&&(g=n.Cartesian3.normalize(n.Cartesian3.cross(y,m,g),g))}}else C=i.Matrix3.clone(i.Matrix3.IDENTITY,C);var w=R;t.st&&(w.x=r.x,w.y=r.y);for(var A=f.length,F=3*A,G=new Float64Array(F),L=t.normal?new Float32Array(F):void 0,E=t.tangent?new Float32Array(F):void 0,T=t.bitangent?new Float32Array(F):void 0,_=t.st?new Float32Array(2*A):void 0,I=0,M=0,H=0,B=0,O=0,z=0;z<A;z++){var j=f[z];if(G[I++]=j.x,G[I++]=j.y,G[I++]=j.z,t.st){var U=p(i.Matrix3.multiplyByVector(C,j,D),V);l.Cartesian2.subtract(U,w,U);var Y=a.CesiumMath.clamp(U.x/r.width,0,1),q=a.CesiumMath.clamp(U.y/r.height,0,1);_[O++]=Y,_[O++]=q}t.normal&&(L[M++]=y.x,L[M++]=y.y,L[M++]=y.z),t.tangent&&(E[B++]=m.x,E[B++]=m.y,E[B++]=m.z),t.bitangent&&(T[H++]=g.x,T[H++]=g.y,T[H++]=g.z)}var J=new u.GeometryAttributes;return t.position&&(J.position=new d.GeometryAttribute({componentDatatype:c.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:G})),t.normal&&(J.normal=new d.GeometryAttribute({componentDatatype:c.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:L})),t.tangent&&(J.tangent=new d.GeometryAttribute({componentDatatype:c.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:E})),t.bitangent&&(J.bitangent=new d.GeometryAttribute({componentDatatype:c.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:T})),t.st&&(J.st=new d.GeometryAttribute({componentDatatype:c.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:_})),new d.Geometry({attributes:J,indices:v,primitiveType:d.PrimitiveType.TRIANGLES})}function Y(a){var n=(a=e.defaultValue(a,e.defaultValue.EMPTY_OBJECT)).polygonHierarchy;t.Check.defined("options.polygonHierarchy",n);var o=e.defaultValue(a.vertexFormat,C.VertexFormat.DEFAULT);this._vertexFormat=C.VertexFormat.clone(o),this._polygonHierarchy=n,this._stRotation=e.defaultValue(a.stRotation,0),this._ellipsoid=r.Ellipsoid.clone(e.defaultValue(a.ellipsoid,r.Ellipsoid.WGS84)),this._workerName="createCoplanarPolygonGeometry",this.packedLength=T.PolygonGeometryLibrary.computeHierarchyPackedLength(n)+C.VertexFormat.packedLength+r.Ellipsoid.packedLength+2}Y.fromPositions=function(a){return a=e.defaultValue(a,e.defaultValue.EMPTY_OBJECT),t.Check.defined("options.positions",a.positions),new Y({polygonHierarchy:{positions:a.positions},vertexFormat:a.vertexFormat,stRotation:a.stRotation,ellipsoid:a.ellipsoid})},Y.pack=function(a,n,o){return t.Check.typeOf.object("value",a),t.Check.defined("array",n),o=e.defaultValue(o,0),o=T.PolygonGeometryLibrary.packPolygonHierarchy(a._polygonHierarchy,n,o),r.Ellipsoid.pack(a._ellipsoid,n,o),o+=r.Ellipsoid.packedLength,C.VertexFormat.pack(a._vertexFormat,n,o),o+=C.VertexFormat.packedLength,n[o++]=a._stRotation,n[o]=a.packedLength,n};var q=r.Ellipsoid.clone(r.Ellipsoid.UNIT_SPHERE),J=new C.VertexFormat,W={polygonHierarchy:{}};return Y.unpack=function(a,n,o){t.Check.defined("array",a),n=e.defaultValue(n,0);var i=T.PolygonGeometryLibrary.unpackPolygonHierarchy(a,n);n=i.startingIndex,delete i.startingIndex;var s=r.Ellipsoid.unpack(a,n,q);n+=r.Ellipsoid.packedLength;var l=C.VertexFormat.unpack(a,n,J);n+=C.VertexFormat.packedLength;var p=a[n++],y=a[n];return e.defined(o)||(o=new Y(W)),o._polygonHierarchy=i,o._ellipsoid=r.Ellipsoid.clone(s,o._ellipsoid),o._vertexFormat=C.VertexFormat.clone(l,o._vertexFormat),o._stRotation=p,o.packedLength=y,o},Y.createGeometry=function(e){var t=e._vertexFormat,r=e._polygonHierarchy,i=e._stRotation,s=r.positions;if(!((s=P.arrayRemoveDuplicates(s,n.Cartesian3.equalsEpsilon,!0)).length<3)){var l=I,p=M,y=H,c=O,u=z;if(G.CoplanarPolygonGeometryLibrary.computeProjectTo2DArguments(s,B,c,u)){if(l=n.Cartesian3.cross(c,u,l),l=n.Cartesian3.normalize(l,l),!n.Cartesian3.equalsEpsilon(B,n.Cartesian3.ZERO,a.CesiumMath.EPSILON6)){var m=e._ellipsoid.geodeticSurfaceNormal(B,j);n.Cartesian3.dot(l,m)<0&&(l=n.Cartesian3.negate(l,l),c=n.Cartesian3.negate(c,c))}var f=G.CoplanarPolygonGeometryLibrary.createProjectPointsTo2DFunction(B,c,u),h=G.CoplanarPolygonGeometryLibrary.createProjectPointTo2DFunction(B,c,u);t.tangent&&(p=n.Cartesian3.clone(c,p)),t.bitangent&&(y=n.Cartesian3.clone(u,y));var v=T.PolygonGeometryLibrary.polygonsFromHierarchy(r,f,!1),C=v.hierarchy,w=v.polygons;if(0!==C.length){s=C[0].outerRing;for(var A=o.BoundingSphere.fromPoints(s),F=T.PolygonGeometryLibrary.computeBoundingRectangle(l,h,s,i,_),L=[],E=0;E<w.length;E++){var k=new x.GeometryInstance({geometry:U(w[E],t,F,i,h,l,p,y)});L.push(k)}var D=g.GeometryPipeline.combineInstances(L)[0];D.attributes.position.values=new Float64Array(D.attributes.position.values),D.indices=b.IndexDatatype.createTypedArray(D.attributes.position.values.length/3,D.indices);var V=D.attributes;return t.position||delete V.position,new d.Geometry({attributes:V,indices:D.indices,primitiveType:D.primitiveType,boundingSphere:A})}}}},function(t,a){return e.defined(a)&&(t=Y.unpack(t,a)),Y.createGeometry(t)}}));
