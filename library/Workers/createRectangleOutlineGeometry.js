/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./when-4ca4e419","./Check-430b3551","./defineProperties-163ddb68","./Cartesian3-32451e63","./Ellipsoid-d2aa3b12","./Transforms-7b04d7e0","./Matrix4-33464f2b","./RuntimeError-443472b0","./Cartesian2-f49a1383","./FeatureDetection-0d4fee13","./WebGLConstants-2ddfa2f9","./ComponentDatatype-329b9462","./GeometryAttribute-b8faa946","./GeometryAttributes-614c63f8","./IndexDatatype-153fdd7f","./arrayFill-11a46844","./EllipsoidRhumbLine-c004db91","./PolygonPipeline-d25dad97","./RectangleGeometryLibrary-b86d2dd6"],(function(e,t,i,r,a,n,o,l,u,s,d,p,c,f,g,h,y,b,m){"use strict";var v=new n.BoundingSphere,_=new n.BoundingSphere,E=new r.Cartesian3,A=new u.Rectangle;function w(e,t){var i=e._ellipsoid,r=t.height,a=t.width,n=t.northCap,o=t.southCap,l=r,u=2,s=0,d=4;n&&(u-=1,l-=1,s+=1,d-=2),o&&(u-=1,l-=1,s+=1,d-=2),s+=u*a+2*l-d;var h,y=new Float64Array(3*s),b=0,v=0,_=E;if(n)m.RectangleGeometryLibrary.computePosition(t,i,!1,v,0,_),y[b++]=_.x,y[b++]=_.y,y[b++]=_.z;else for(h=0;h<a;h++)m.RectangleGeometryLibrary.computePosition(t,i,!1,v,h,_),y[b++]=_.x,y[b++]=_.y,y[b++]=_.z;for(h=a-1,v=1;v<r;v++)m.RectangleGeometryLibrary.computePosition(t,i,!1,v,h,_),y[b++]=_.x,y[b++]=_.y,y[b++]=_.z;if(v=r-1,!o)for(h=a-2;h>=0;h--)m.RectangleGeometryLibrary.computePosition(t,i,!1,v,h,_),y[b++]=_.x,y[b++]=_.y,y[b++]=_.z;for(h=0,v=r-2;v>0;v--)m.RectangleGeometryLibrary.computePosition(t,i,!1,v,h,_),y[b++]=_.x,y[b++]=_.y,y[b++]=_.z;for(var A=y.length/3*2,w=g.IndexDatatype.createTypedArray(y.length/3,A),G=0,R=0;R<y.length/3-1;R++)w[G++]=R,w[G++]=R+1;w[G++]=y.length/3-1,w[G++]=0;var P=new c.Geometry({attributes:new f.GeometryAttributes,primitiveType:c.PrimitiveType.LINES});return P.attributes.position=new c.GeometryAttribute({componentDatatype:p.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:y}),P.indices=w,P}function G(r){var n=(r=e.defaultValue(r,e.defaultValue.EMPTY_OBJECT)).rectangle,o=e.defaultValue(r.granularity,i.CesiumMath.RADIANS_PER_DEGREE),l=e.defaultValue(r.ellipsoid,a.Ellipsoid.WGS84),s=e.defaultValue(r.rotation,0);if(!e.defined(n))throw new t.DeveloperError("rectangle is required.");if(u.Rectangle.validate(n),n.north<n.south)throw new t.DeveloperError("options.rectangle.north must be greater than options.rectangle.south");var d=e.defaultValue(r.height,0),p=e.defaultValue(r.extrudedHeight,d);this._rectangle=u.Rectangle.clone(n),this._granularity=o,this._ellipsoid=l,this._surfaceHeight=Math.max(d,p),this._rotation=s,this._extrudedHeight=Math.min(d,p),this._offsetAttribute=r.offsetAttribute,this._workerName="createRectangleOutlineGeometry"}G.packedLength=u.Rectangle.packedLength+a.Ellipsoid.packedLength+5,G.pack=function(i,r,n){if(!e.defined(i))throw new t.DeveloperError("value is required");if(!e.defined(r))throw new t.DeveloperError("array is required");return n=e.defaultValue(n,0),u.Rectangle.pack(i._rectangle,r,n),n+=u.Rectangle.packedLength,a.Ellipsoid.pack(i._ellipsoid,r,n),n+=a.Ellipsoid.packedLength,r[n++]=i._granularity,r[n++]=i._surfaceHeight,r[n++]=i._rotation,r[n++]=i._extrudedHeight,r[n]=e.defaultValue(i._offsetAttribute,-1),r};var R=new u.Rectangle,P=a.Ellipsoid.clone(a.Ellipsoid.UNIT_SPHERE),D={rectangle:R,ellipsoid:P,granularity:void 0,height:void 0,rotation:void 0,extrudedHeight:void 0,offsetAttribute:void 0};G.unpack=function(i,r,n){if(!e.defined(i))throw new t.DeveloperError("array is required");r=e.defaultValue(r,0);var o=u.Rectangle.unpack(i,r,R);r+=u.Rectangle.packedLength;var l=a.Ellipsoid.unpack(i,r,P);r+=a.Ellipsoid.packedLength;var s=i[r++],d=i[r++],p=i[r++],c=i[r++],f=i[r];return e.defined(n)?(n._rectangle=u.Rectangle.clone(o,n._rectangle),n._ellipsoid=a.Ellipsoid.clone(l,n._ellipsoid),n._surfaceHeight=d,n._rotation=p,n._extrudedHeight=c,n._offsetAttribute=-1===f?void 0:f,n):(D.granularity=s,D.height=d,D.rotation=p,D.extrudedHeight=c,D.offsetAttribute=-1===f?void 0:f,new G(D))};var C=new a.Cartographic;return G.createGeometry=function(t){var r,a,o=t._rectangle,l=t._ellipsoid,u=m.RectangleGeometryLibrary.computeOptions(o,t._granularity,t._rotation,0,A,C);if(!i.CesiumMath.equalsEpsilon(o.north,o.south,i.CesiumMath.EPSILON10)&&!i.CesiumMath.equalsEpsilon(o.east,o.west,i.CesiumMath.EPSILON10)){var s,d=t._surfaceHeight,f=t._extrudedHeight;if(!i.CesiumMath.equalsEpsilon(d,f,0,i.CesiumMath.EPSILON2)){if(r=function(e,t){var i=e._surfaceHeight,r=e._extrudedHeight,a=e._ellipsoid,n=r,o=i,l=w(e,t),u=t.height,s=t.width,d=b.PolygonPipeline.scaleToGeodeticHeight(l.attributes.position.values,o,a,!1),p=d.length,c=new Float64Array(2*p);c.set(d);var f=b.PolygonPipeline.scaleToGeodeticHeight(l.attributes.position.values,n,a);c.set(f,p),l.attributes.position.values=c;var h=t.northCap,y=t.southCap,m=4;h&&(m-=1),y&&(m-=1);var v=2*(c.length/3+m),_=g.IndexDatatype.createTypedArray(c.length/3,v);p=c.length/6;for(var E,A=0,G=0;G<p-1;G++)_[A++]=G,_[A++]=G+1,_[A++]=G+p,_[A++]=G+p+1;if(_[A++]=p-1,_[A++]=0,_[A++]=p+p-1,_[A++]=p,_[A++]=0,_[A++]=p,h)E=u-1;else{var R=s-1;_[A++]=R,_[A++]=R+p,E=s+u-2}if(_[A++]=E,_[A++]=E+p,!y){var P=s+E-1;_[A++]=P,_[A]=P+p}return l.indices=_,l}(t,u),e.defined(t._offsetAttribute)){var y=r.attributes.position.values.length/3,E=new Uint8Array(y);t._offsetAttribute===c.GeometryOffsetAttribute.TOP?E=h.arrayFill(E,1,0,y/2):(s=t._offsetAttribute===c.GeometryOffsetAttribute.NONE?0:1,E=h.arrayFill(E,s)),r.attributes.applyOffset=new c.GeometryAttribute({componentDatatype:p.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:E})}var G=n.BoundingSphere.fromRectangle3D(o,l,d,_),R=n.BoundingSphere.fromRectangle3D(o,l,f,v);a=n.BoundingSphere.union(G,R)}else{if((r=w(t,u)).attributes.position.values=b.PolygonPipeline.scaleToGeodeticHeight(r.attributes.position.values,d,l,!1),e.defined(t._offsetAttribute)){var P=r.attributes.position.values.length,D=new Uint8Array(P/3);s=t._offsetAttribute===c.GeometryOffsetAttribute.NONE?0:1,h.arrayFill(D,s),r.attributes.applyOffset=new c.GeometryAttribute({componentDatatype:p.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:D})}a=n.BoundingSphere.fromRectangle3D(o,l,d)}return new c.Geometry({attributes:r.attributes,indices:r.indices,primitiveType:c.PrimitiveType.LINES,boundingSphere:a,offsetAttribute:t._offsetAttribute})}},function(t,i){return e.defined(i)&&(t=G.unpack(t,i)),t._ellipsoid=a.Ellipsoid.clone(t._ellipsoid),t._rectangle=u.Rectangle.clone(t._rectangle),G.createGeometry(t)}}));
