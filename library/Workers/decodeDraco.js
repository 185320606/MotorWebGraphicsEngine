/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./when-4ca4e419","./Check-430b3551","./defineProperties-163ddb68","./RuntimeError-443472b0","./FeatureDetection-0d4fee13","./WebGLConstants-2ddfa2f9","./ComponentDatatype-329b9462","./IndexDatatype-153fdd7f","./createTaskProcessorWorker"],(function(e,r,t,n,a,o,i,u,s){"use strict";var d;function c(e,r){for(var t=e.num_points(),n=e.num_faces(),a=new d.DracoInt32Array,o=3*n,i=u.IndexDatatype.createTypedArray(t,o),s=0,c=0;c<n;++c)r.GetFaceFromMesh(e,c,a),i[s+0]=a.GetValue(0),i[s+1]=a.GetValue(1),i[s+2]=a.GetValue(2),s+=3;return d.destroy(a),{typedArray:i,numberOfIndices:o}}function f(r,t,n){var a,o=r.num_points(),u=n.num_components(),s=new d.AttributeQuantizationTransform;if(s.InitFromAttribute(n)){for(var c=new Array(u),f=0;f<u;++f)c[f]=s.min_value(f);a={quantizationBits:s.quantization_bits(),minValues:c,range:s.range(),octEncoded:!1}}d.destroy(s),(s=new d.AttributeOctahedronTransform).InitFromAttribute(n)&&(a={quantizationBits:s.quantization_bits(),octEncoded:!0}),d.destroy(s);var y,A=o*u;y=e.defined(a)?function(e,r,t,n,a){var o,i;n.quantizationBits<=8?(i=new d.DracoUInt8Array,o=new Uint8Array(a),r.GetAttributeUInt8ForAllPoints(e,t,i)):(i=new d.DracoUInt16Array,o=new Uint16Array(a),r.GetAttributeUInt16ForAllPoints(e,t,i));for(var u=0;u<a;++u)o[u]=i.GetValue(u);return d.destroy(i),o}(r,t,n,a,A):function(e,r,t,n){var a,o;switch(t.data_type()){case 1:case 11:o=new d.DracoInt8Array,a=new Int8Array(n),r.GetAttributeInt8ForAllPoints(e,t,o);break;case 2:o=new d.DracoUInt8Array,a=new Uint8Array(n),r.GetAttributeUInt8ForAllPoints(e,t,o);break;case 3:o=new d.DracoInt16Array,a=new Int16Array(n),r.GetAttributeInt16ForAllPoints(e,t,o);break;case 4:o=new d.DracoUInt16Array,a=new Uint16Array(n),r.GetAttributeUInt16ForAllPoints(e,t,o);break;case 5:case 7:o=new d.DracoInt32Array,a=new Int32Array(n),r.GetAttributeInt32ForAllPoints(e,t,o);break;case 6:case 8:o=new d.DracoUInt32Array,a=new Uint32Array(n),r.GetAttributeUInt32ForAllPoints(e,t,o);break;case 9:case 10:o=new d.DracoFloat32Array,a=new Float32Array(n),r.GetAttributeFloatForAllPoints(e,t,o)}for(var i=0;i<n;++i)a[i]=o.GetValue(i);return d.destroy(o),a}(r,t,n,A);var b=i.ComponentDatatype.fromTypedArray(y);return{array:y,data:{componentsPerAttribute:u,componentDatatype:b,byteOffset:n.byte_offset(),byteStride:i.ComponentDatatype.getSizeInBytes(b)*u,normalized:n.normalized(),quantization:a}}}function y(r){return e.defined(r.primitive)?function(e){var r=new d.Decoder,t=["POSITION","NORMAL","COLOR","TEX_COORD"];if(e.dequantizeInShader)for(var a=0;a<t.length;++a)r.SkipAttributeTransform(d[t[a]]);var o=e.bufferView,i=new d.DecoderBuffer;if(i.Init(e.array,o.byteLength),r.GetEncodedGeometryType(i)!==d.TRIANGULAR_MESH)throw new n.RuntimeError("Unsupported draco mesh geometry type.");var u=new d.Mesh,s=r.DecodeBufferToMesh(i,u);if(!s.ok()||0===u.ptr)throw new n.RuntimeError("Error decoding draco mesh geometry: "+s.error_msg());d.destroy(i);var y={},A=e.compressedAttributes;for(var b in A)if(A.hasOwnProperty(b)){var m=A[b],w=r.GetAttributeByUniqueId(u,m);y[b]=f(u,r,w)}var l={indexArray:c(u,r),attributeData:y};return d.destroy(u),d.destroy(r),l}(r):function(e){var r=new d.Decoder;e.dequantizeInShader&&(r.SkipAttributeTransform(d.POSITION),r.SkipAttributeTransform(d.NORMAL));var t=new d.DecoderBuffer;if(t.Init(e.buffer,e.buffer.length),r.GetEncodedGeometryType(t)!==d.POINT_CLOUD)throw new n.RuntimeError("Draco geometry type must be POINT_CLOUD.");var a=new d.PointCloud,o=r.DecodeBufferToPointCloud(t,a);if(!o.ok()||0===a.ptr)throw new n.RuntimeError("Error decoding draco point cloud: "+o.error_msg());d.destroy(t);var i={},u=e.properties;for(var s in u)if(u.hasOwnProperty(s)){var c=u[s],y=r.GetAttributeByUniqueId(a,c);i[s]=f(a,r,y)}return d.destroy(a),d.destroy(r),i}(r)}function A(e){d=e,self.onmessage=s(y),self.postMessage(!0)}return function(r){var t=r.data.webAssemblyConfig;if(e.defined(t))return require([t.modulePath],(function(r){e.defined(t.wasmBinaryFile)?(e.defined(r)||(r=self.DracoDecoderModule),r(t).then((function(e){A(e)}))):A(r())}))}}));
