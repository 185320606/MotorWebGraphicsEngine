define(["exports","./when-7ef6387a","./DeveloperError-101d8eb9","./Check-71521db1","./Cartesian3-ca5d3f12","./Ellipsoid-57478151"],(function(t,i,e,a,n,s){"use strict";function h(t,i,e){if(0===t)return i*e;var a=t*t,n=a*a,s=n*a,h=s*a,r=h*a,u=r*a,d=e;return i*((1-a/4-3*n/64-5*s/256-175*h/16384-441*r/65536-4851*u/1048576)*d-(3*a/8+3*n/32+45*s/1024+105*h/4096+2205*r/131072+6237*u/524288)*Math.sin(2*d)+(15*n/256+45*s/1024+525*h/16384+1575*r/65536+155925*u/8388608)*Math.sin(4*d)-(35*s/3072+175*h/12288+3675*r/262144+13475*u/1048576)*Math.sin(6*d)+(315*h/131072+2205*r/524288+43659*u/8388608)*Math.sin(8*d)-(693*r/1310720+6237*u/5242880)*Math.sin(10*d)+1001*u/8388608*Math.sin(12*d))}function r(t,i){if(0===t)return Math.log(Math.tan(.5*(n.CesiumMath.PI_OVER_TWO+i)));var e=t*Math.sin(i);return Math.log(Math.tan(.5*(n.CesiumMath.PI_OVER_TWO+i)))-t/2*Math.log((1+e)/(1-e))}var u=new n.Cartesian3,d=new n.Cartesian3;function o(t,i,e,o){var l=n.Cartesian3.normalize(o.cartographicToCartesian(i,d),u),c=n.Cartesian3.normalize(o.cartographicToCartesian(e,d),d);a.Check.typeOf.number.greaterThanOrEquals("value",Math.abs(Math.abs(n.Cartesian3.angleBetween(l,c))-Math.PI),.0125);var M=o.maximumRadius,m=o.minimumRadius,_=M*M,g=m*m;t._ellipticitySquared=(_-g)/_,t._ellipticity=Math.sqrt(t._ellipticitySquared),t._start=s.Cartographic.clone(i,t._start),t._start.height=0,t._end=s.Cartographic.clone(e,t._end),t._end.height=0,t._heading=function(t,i,e,a,s){var h=r(t._ellipticity,e),u=r(t._ellipticity,s);return Math.atan2(n.CesiumMath.negativePiToPi(a-i),u-h)}(t,i.longitude,i.latitude,e.longitude,e.latitude),t._distance=function(t,i,e,a,s,r,u){var d=t._heading,o=r-a,l=0;if(n.CesiumMath.equalsEpsilon(Math.abs(d),n.CesiumMath.PI_OVER_TWO,n.CesiumMath.EPSILON8))if(i===e)l=i*Math.cos(s)*n.CesiumMath.negativePiToPi(o);else{var c=Math.sin(s);l=i*Math.cos(s)*n.CesiumMath.negativePiToPi(o)/Math.sqrt(1-t._ellipticitySquared*c*c)}else{var M=h(t._ellipticity,i,s);l=(h(t._ellipticity,i,u)-M)/Math.cos(d)}return Math.abs(l)}(t,o.maximumRadius,o.minimumRadius,i.longitude,i.latitude,e.longitude,e.latitude)}function l(t,e,a,u,d,o){var l,c,M,m=d*d;if(Math.abs(n.CesiumMath.PI_OVER_TWO-Math.abs(e))>n.CesiumMath.EPSILON8){c=function(t,i,e){var a=t/e;if(0===i)return a;var n=a*a,s=n*a,h=s*a,r=i*i,u=r*r,d=u*r,o=d*r,l=o*r,c=l*r,M=Math.sin(2*a),m=Math.cos(2*a),_=Math.sin(4*a),g=Math.cos(4*a),p=Math.sin(6*a),f=Math.cos(6*a),C=Math.sin(8*a),P=Math.cos(8*a),v=Math.sin(10*a);return a+a*r/4+7*a*u/64+15*a*d/256+579*a*o/16384+1515*a*l/65536+16837*a*c/1048576+(3*a*u/16+45*a*d/256-a*(32*n-561)*o/4096-a*(232*n-1677)*l/16384+a*(399985-90560*n+512*h)*c/5242880)*m+(21*a*d/256+483*a*o/4096-a*(224*n-1969)*l/16384-a*(33152*n-112599)*c/1048576)*g+(151*a*o/4096+4681*a*l/65536+1479*a*c/16384-453*s*c/32768)*f+(1097*a*l/65536+42783*a*c/1048576)*P+8011*a*c/1048576*Math.cos(10*a)+(3*r/8+3*u/16+213*d/2048-3*n*d/64+255*o/4096-33*n*o/512+20861*l/524288-33*n*l/512+h*l/1024+28273*c/1048576-471*n*c/8192+9*h*c/4096)*M+(21*u/256+21*d/256+533*o/8192-21*n*o/512+197*l/4096-315*n*l/4096+584039*c/16777216-12517*n*c/131072+7*h*c/2048)*_+(151*d/6144+151*o/4096+5019*l/131072-453*n*l/16384+26965*c/786432-8607*n*c/131072)*p+(1097*o/131072+1097*l/65536+225797*c/10485760-1097*n*c/65536)*C+(8011*l/2621440+8011*c/1048576)*v+293393*c/251658240*Math.sin(12*a)}(h(d,u,t.latitude)+a*Math.cos(e),d,u);var _=r(d,t.latitude),g=r(d,c);M=Math.tan(e)*(g-_),l=n.CesiumMath.negativePiToPi(t.longitude+M)}else{var p;if(c=t.latitude,0===d)p=u*Math.cos(t.latitude);else{var f=Math.sin(t.latitude);p=u*Math.cos(t.latitude)/Math.sqrt(1-m*f*f)}M=a/p,l=e>0?n.CesiumMath.negativePiToPi(t.longitude+M):n.CesiumMath.negativePiToPi(t.longitude-M)}return i.defined(o)?(o.longitude=l,o.latitude=c,o.height=0,o):new s.Cartographic(l,c,0)}function c(t,e,a){var n=i.defaultValue(a,s.Ellipsoid.WGS84);this._ellipsoid=n,this._start=new s.Cartographic,this._end=new s.Cartographic,this._heading=void 0,this._distance=void 0,this._ellipticity=void 0,this._ellipticitySquared=void 0,i.defined(t)&&i.defined(e)&&o(this,t,e,n)}Object.defineProperties(c.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},surfaceDistance:{get:function(){return a.Check.defined("distance",this._distance),this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},heading:{get:function(){return a.Check.defined("distance",this._distance),this._heading}}}),c.fromStartHeadingDistance=function(t,e,h,r,u){a.Check.defined("start",t),a.Check.defined("heading",e),a.Check.defined("distance",h),a.Check.typeOf.number.greaterThan("distance",h,0);var d=i.defaultValue(r,s.Ellipsoid.WGS84),o=d.maximumRadius,M=d.minimumRadius,m=o*o,_=M*M,g=Math.sqrt((m-_)/m),p=l(t,e=n.CesiumMath.negativePiToPi(e),h,d.maximumRadius,g);return!i.defined(u)||i.defined(r)&&!r.equals(u.ellipsoid)?new c(t,p,d):(u.setEndPoints(t,p),u)},c.prototype.setEndPoints=function(t,i){a.Check.defined("start",t),a.Check.defined("end",i),o(this,t,i,this._ellipsoid)},c.prototype.interpolateUsingFraction=function(t,i){return this.interpolateUsingSurfaceDistance(t*this._distance,i)},c.prototype.interpolateUsingSurfaceDistance=function(t,n){if(a.Check.typeOf.number("distance",t),!i.defined(this._distance)||0===this._distance)throw new e.DeveloperError("EllipsoidRhumbLine must have distinct start and end set.");return l(this._start,this._heading,t,this._ellipsoid.maximumRadius,this._ellipticity,n)},c.prototype.findIntersectionWithLongitude=function(t,h){if(a.Check.typeOf.number("intersectionLongitude",t),!i.defined(this._distance)||0===this._distance)throw new e.DeveloperError("EllipsoidRhumbLine must have distinct start and end set.");var r=this._ellipticity,u=this._heading,d=Math.abs(u),o=this._start;if(t=n.CesiumMath.negativePiToPi(t),n.CesiumMath.equalsEpsilon(Math.abs(t),Math.PI,n.CesiumMath.EPSILON14)&&(t=n.CesiumMath.sign(o.longitude)*Math.PI),i.defined(h)||(h=new s.Cartographic),Math.abs(n.CesiumMath.PI_OVER_TWO-d)<=n.CesiumMath.EPSILON8)return h.longitude=t,h.latitude=o.latitude,h.height=0,h;if(n.CesiumMath.equalsEpsilon(Math.abs(n.CesiumMath.PI_OVER_TWO-d),n.CesiumMath.PI_OVER_TWO,n.CesiumMath.EPSILON8)){if(n.CesiumMath.equalsEpsilon(t,o.longitude,n.CesiumMath.EPSILON12))return;return h.longitude=t,h.latitude=n.CesiumMath.PI_OVER_TWO*n.CesiumMath.sign(n.CesiumMath.PI_OVER_TWO-u),h.height=0,h}var l,c=o.latitude,M=r*Math.sin(c),m=Math.tan(.5*(n.CesiumMath.PI_OVER_TWO+c))*Math.exp((t-o.longitude)/Math.tan(u)),_=(1+M)/(1-M),g=o.latitude;do{l=g;var p=r*Math.sin(l),f=(1+p)/(1-p);g=2*Math.atan(m*Math.pow(f/_,r/2))-n.CesiumMath.PI_OVER_TWO}while(!n.CesiumMath.equalsEpsilon(g,l,n.CesiumMath.EPSILON12));return h.longitude=t,h.latitude=g,h.height=0,h},c.prototype.findIntersectionWithLatitude=function(t,h){if(a.Check.typeOf.number("intersectionLatitude",t),!i.defined(this._distance)||0===this._distance)throw new e.DeveloperError("EllipsoidRhumbLine must have distinct start and end set.");var u=this._ellipticity,d=this._heading,o=this._start;if(!n.CesiumMath.equalsEpsilon(Math.abs(d),n.CesiumMath.PI_OVER_TWO,n.CesiumMath.EPSILON8)){var l=r(u,o.latitude),c=r(u,t),M=Math.tan(d)*(c-l),m=n.CesiumMath.negativePiToPi(o.longitude+M);return i.defined(h)?(h.longitude=m,h.latitude=t,h.height=0,h):new s.Cartographic(m,t,0)}},t.EllipsoidRhumbLine=c}));
//# sourceMappingURL=EllipsoidRhumbLine-2da2335c.js.map
