/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./when-4ca4e419","./Check-430b3551","./defineProperties-163ddb68","./Cartesian3-32451e63","./Ellipsoid-d2aa3b12","./Transforms-7b04d7e0","./Matrix4-33464f2b","./RuntimeError-443472b0","./Cartesian2-f49a1383","./FeatureDetection-0d4fee13","./WebGLConstants-2ddfa2f9","./ComponentDatatype-329b9462","./GeometryAttribute-b8faa946","./GeometryAttributes-614c63f8","./IndexDatatype-153fdd7f","./IntersectionTests-15d018f5","./Plane-84b14a0a","./EllipsoidTangentPlane-3967708f","./EllipsoidRhumbLine-c004db91","./PolygonPipeline-d25dad97","./EllipsoidGeodesic-c57b5e5c","./PolylinePipeline-4ac94627","./WallGeometryLibrary-8829821e"],(function(e,i,t,r,n,a,o,s,l,d,m,p,u,f,h,g,c,y,v,E,w,_,b){"use strict";var C=new r.Cartesian3,H=new r.Cartesian3;function A(a){var o=(a=e.defaultValue(a,e.defaultValue.EMPTY_OBJECT)).positions,s=a.maximumHeights,l=a.minimumHeights;if(!e.defined(o))throw new i.DeveloperError("options.positions is required.");if(e.defined(s)&&s.length!==o.length)throw new i.DeveloperError("options.positions and options.maximumHeights must have the same length.");if(e.defined(l)&&l.length!==o.length)throw new i.DeveloperError("options.positions and options.minimumHeights must have the same length.");var d=e.defaultValue(a.granularity,t.CesiumMath.RADIANS_PER_DEGREE),m=e.defaultValue(a.ellipsoid,n.Ellipsoid.WGS84);this._positions=o,this._minimumHeights=l,this._maximumHeights=s,this._granularity=d,this._ellipsoid=n.Ellipsoid.clone(m),this._workerName="createWallOutlineGeometry";var p=1+o.length*r.Cartesian3.packedLength+2;e.defined(l)&&(p+=l.length),e.defined(s)&&(p+=s.length),this.packedLength=p+n.Ellipsoid.packedLength+1}A.pack=function(t,a,o){if(!e.defined(t))throw new i.DeveloperError("value is required");if(!e.defined(a))throw new i.DeveloperError("array is required");var s;o=e.defaultValue(o,0);var l=t._positions,d=l.length;for(a[o++]=d,s=0;s<d;++s,o+=r.Cartesian3.packedLength)r.Cartesian3.pack(l[s],a,o);var m=t._minimumHeights;if(d=e.defined(m)?m.length:0,a[o++]=d,e.defined(m))for(s=0;s<d;++s)a[o++]=m[s];var p=t._maximumHeights;if(d=e.defined(p)?p.length:0,a[o++]=d,e.defined(p))for(s=0;s<d;++s)a[o++]=p[s];return n.Ellipsoid.pack(t._ellipsoid,a,o),a[o+=n.Ellipsoid.packedLength]=t._granularity,a};var P=n.Ellipsoid.clone(n.Ellipsoid.UNIT_SPHERE),k={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:P,granularity:void 0};return A.unpack=function(t,a,o){if(!e.defined(t))throw new i.DeveloperError("array is required");var s;a=e.defaultValue(a,0);var l,d,m=t[a++],p=new Array(m);for(s=0;s<m;++s,a+=r.Cartesian3.packedLength)p[s]=r.Cartesian3.unpack(t,a);if((m=t[a++])>0)for(l=new Array(m),s=0;s<m;++s)l[s]=t[a++];if((m=t[a++])>0)for(d=new Array(m),s=0;s<m;++s)d[s]=t[a++];var u=n.Ellipsoid.unpack(t,a,P),f=t[a+=n.Ellipsoid.packedLength];return e.defined(o)?(o._positions=p,o._minimumHeights=l,o._maximumHeights=d,o._ellipsoid=n.Ellipsoid.clone(u,o._ellipsoid),o._granularity=f,o):(k.positions=p,k.minimumHeights=l,k.maximumHeights=d,k.granularity=f,new A(k))},A.fromConstantHeights=function(t){var r,n,a=(t=e.defaultValue(t,e.defaultValue.EMPTY_OBJECT)).positions;if(!e.defined(a))throw new i.DeveloperError("options.positions is required.");var o=t.minimumHeight,s=t.maximumHeight,l=e.defined(o),d=e.defined(s);if(l||d){var m=a.length;r=l?new Array(m):void 0,n=d?new Array(m):void 0;for(var p=0;p<m;++p)l&&(r[p]=o),d&&(n[p]=s)}return new A({positions:a,maximumHeights:n,minimumHeights:r,ellipsoid:t.ellipsoid})},A.createGeometry=function(i){var n=i._positions,o=i._minimumHeights,s=i._maximumHeights,l=i._granularity,d=i._ellipsoid,m=b.WallGeometryLibrary.computePositions(d,n,s,o,l,!1);if(e.defined(m)){var g,c=m.bottomPositions,y=m.topPositions,v=y.length,E=2*v,w=new Float64Array(E),_=0;for(v/=3,g=0;g<v;++g){var A=3*g,P=r.Cartesian3.fromArray(y,A,C),k=r.Cartesian3.fromArray(c,A,H);w[_++]=k.x,w[_++]=k.y,w[_++]=k.z,w[_++]=P.x,w[_++]=P.y,w[_++]=P.z}var D=new f.GeometryAttributes({position:new u.GeometryAttribute({componentDatatype:p.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:w})}),x=E/3;E=2*x-4+x;var G=h.IndexDatatype.createTypedArray(x,E),L=0;for(g=0;g<x-2;g+=2){var T=g,V=g+2,I=r.Cartesian3.fromArray(w,3*T,C),S=r.Cartesian3.fromArray(w,3*V,H);if(!r.Cartesian3.equalsEpsilon(I,S,t.CesiumMath.EPSILON10)){var q=g+1,R=g+3;G[L++]=q,G[L++]=T,G[L++]=q,G[L++]=R,G[L++]=T,G[L++]=V}}return G[L++]=x-2,G[L++]=x-1,new u.Geometry({attributes:D,indices:G,primitiveType:u.PrimitiveType.LINES,boundingSphere:new a.BoundingSphere.fromVertices(w)})}},function(i,t){return e.defined(t)&&(i=A.unpack(i,t)),i._ellipsoid=n.Ellipsoid.clone(i._ellipsoid),A.createGeometry(i)}}));
