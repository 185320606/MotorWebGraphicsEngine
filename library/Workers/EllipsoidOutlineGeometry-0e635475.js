define(["exports","./when-7ef6387a","./DeveloperError-101d8eb9","./Cartesian3-ca5d3f12","./Ellipsoid-57478151","./Transforms-7a1c9ee7","./ComponentDatatype-f4fabeaa","./GeometryAttribute-c5b9902a","./PrimitiveType-4c1d698a","./GeometryAttributes-cb18da36","./IndexDatatype-bfeda8ca","./GeometryOffsetAttribute-19130c81"],(function(e,i,t,r,a,o,n,s,u,m,f,d){"use strict";var l=new r.Cartesian3(1,1,1),c=Math.cos,p=Math.sin;function C(e){e=i.defaultValue(e,i.defaultValue.EMPTY_OBJECT);var a=i.defaultValue(e.radii,l),o=i.defaultValue(e.innerRadii,a),n=i.defaultValue(e.minimumClock,0),s=i.defaultValue(e.maximumClock,r.CesiumMath.TWO_PI),u=i.defaultValue(e.minimumCone,0),m=i.defaultValue(e.maximumCone,r.CesiumMath.PI),f=Math.round(i.defaultValue(e.stackPartitions,10)),c=Math.round(i.defaultValue(e.slicePartitions,8)),p=Math.round(i.defaultValue(e.subdivisions,128));if(f<1)throw new t.DeveloperError("options.stackPartitions cannot be less than 1");if(c<0)throw new t.DeveloperError("options.slicePartitions cannot be less than 0");if(p<0)throw new t.DeveloperError("options.subdivisions must be greater than or equal to zero.");if(i.defined(e.offsetAttribute)&&e.offsetAttribute===d.GeometryOffsetAttribute.TOP)throw new t.DeveloperError("GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.");this._radii=r.Cartesian3.clone(a),this._innerRadii=r.Cartesian3.clone(o),this._minimumClock=n,this._maximumClock=s,this._minimumCone=u,this._maximumCone=m,this._stackPartitions=f,this._slicePartitions=c,this._subdivisions=p,this._offsetAttribute=e.offsetAttribute,this._workerName="createEllipsoidOutlineGeometry"}C.packedLength=2*r.Cartesian3.packedLength+8,C.pack=function(e,a,o){if(!i.defined(e))throw new t.DeveloperError("value is required");if(!i.defined(a))throw new t.DeveloperError("array is required");return o=i.defaultValue(o,0),r.Cartesian3.pack(e._radii,a,o),o+=r.Cartesian3.packedLength,r.Cartesian3.pack(e._innerRadii,a,o),o+=r.Cartesian3.packedLength,a[o++]=e._minimumClock,a[o++]=e._maximumClock,a[o++]=e._minimumCone,a[o++]=e._maximumCone,a[o++]=e._stackPartitions,a[o++]=e._slicePartitions,a[o++]=e._subdivisions,a[o]=i.defaultValue(e._offsetAttribute,-1),a};var h=new r.Cartesian3,v=new r.Cartesian3,_={radii:h,innerRadii:v,minimumClock:void 0,maximumClock:void 0,minimumCone:void 0,maximumCone:void 0,stackPartitions:void 0,slicePartitions:void 0,subdivisions:void 0,offsetAttribute:void 0};C.unpack=function(e,a,o){if(!i.defined(e))throw new t.DeveloperError("array is required");a=i.defaultValue(a,0);var n=r.Cartesian3.unpack(e,a,h);a+=r.Cartesian3.packedLength;var s=r.Cartesian3.unpack(e,a,v);a+=r.Cartesian3.packedLength;var u=e[a++],m=e[a++],f=e[a++],d=e[a++],l=e[a++],c=e[a++],p=e[a++],b=e[a];return i.defined(o)?(o._radii=r.Cartesian3.clone(n,o._radii),o._innerRadii=r.Cartesian3.clone(s,o._innerRadii),o._minimumClock=u,o._maximumClock=m,o._minimumCone=f,o._maximumCone=d,o._stackPartitions=l,o._slicePartitions=c,o._subdivisions=p,o._offsetAttribute=-1===b?void 0:b,o):(_.minimumClock=u,_.maximumClock=m,_.minimumCone=f,_.maximumCone=d,_.stackPartitions=l,_.slicePartitions=c,_.subdivisions=p,_.offsetAttribute=-1===b?void 0:b,new C(_))},C.createGeometry=function(e){var t=e._radii;if(!(t.x<=0||t.y<=0||t.z<=0)){var l=e._innerRadii;if(!(l.x<=0||l.y<=0||l.z<=0)){var C=e._minimumClock,h=e._maximumClock,v=e._minimumCone,_=e._maximumCone,b=e._subdivisions,y=a.Ellipsoid.fromCartesian3(t),k=e._slicePartitions+1,A=e._stackPartitions+1;(k=Math.round(k*Math.abs(h-C)/r.CesiumMath.TWO_PI))<2&&(k=2),(A=Math.round(A*Math.abs(_-v)/r.CesiumMath.PI))<2&&(A=2);var w=0,P=1,x=l.x!==t.x||l.y!==t.y||l.z!==t.z,E=!1,D=!1;x&&(P=2,v>0&&(E=!0,w+=k),_<Math.PI&&(D=!0,w+=k));var g,M,G,O,V=b*P*(A+k),T=new Float64Array(3*V),z=2*(V+w-(k+A)*P),I=f.IndexDatatype.createTypedArray(V,z),L=0,R=new Array(A),N=new Array(A);for(g=0;g<A;g++)O=v+g*(_-v)/(A-1),R[g]=p(O),N[g]=c(O);var q=new Array(b),B=new Array(b);for(g=0;g<b;g++)G=C+g*(h-C)/(b-1),q[g]=p(G),B[g]=c(G);for(g=0;g<A;g++)for(M=0;M<b;M++)T[L++]=t.x*R[g]*B[M],T[L++]=t.y*R[g]*q[M],T[L++]=t.z*N[g];if(x)for(g=0;g<A;g++)for(M=0;M<b;M++)T[L++]=l.x*R[g]*B[M],T[L++]=l.y*R[g]*q[M],T[L++]=l.z*N[g];for(R.length=b,N.length=b,g=0;g<b;g++)O=v+g*(_-v)/(b-1),R[g]=p(O),N[g]=c(O);for(q.length=k,B.length=k,g=0;g<k;g++)G=C+g*(h-C)/(k-1),q[g]=p(G),B[g]=c(G);for(g=0;g<b;g++)for(M=0;M<k;M++)T[L++]=t.x*R[g]*B[M],T[L++]=t.y*R[g]*q[M],T[L++]=t.z*N[g];if(x)for(g=0;g<b;g++)for(M=0;M<k;M++)T[L++]=l.x*R[g]*B[M],T[L++]=l.y*R[g]*q[M],T[L++]=l.z*N[g];for(L=0,g=0;g<A*P;g++){var S=g*b;for(M=0;M<b-1;M++)I[L++]=S+M,I[L++]=S+M+1}var U=A*b*P;for(g=0;g<k;g++)for(M=0;M<b-1;M++)I[L++]=U+g+M*k,I[L++]=U+g+(M+1)*k;if(x)for(U=A*b*P+k*b,g=0;g<k;g++)for(M=0;M<b-1;M++)I[L++]=U+g+M*k,I[L++]=U+g+(M+1)*k;if(x){var F=A*b*P,W=F+b*k;if(E)for(g=0;g<k;g++)I[L++]=F+g,I[L++]=W+g;if(D)for(F+=b*k-k,W+=b*k-k,g=0;g<k;g++)I[L++]=F+g,I[L++]=W+g}var Y=new m.GeometryAttributes({position:new s.GeometryAttribute({componentDatatype:n.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:T})});if(i.defined(e._offsetAttribute)){var J=T.length,j=new Uint8Array(J/3),H=e._offsetAttribute===d.GeometryOffsetAttribute.NONE?0:1;d.arrayFill(j,H),Y.applyOffset=new s.GeometryAttribute({componentDatatype:n.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:j})}return new s.Geometry({attributes:Y,indices:I,primitiveType:u.PrimitiveType.LINES,boundingSphere:o.BoundingSphere.fromEllipsoid(y),offsetAttribute:e._offsetAttribute})}}},e.EllipsoidOutlineGeometry=C}));
//# sourceMappingURL=EllipsoidOutlineGeometry-0e635475.js.map
